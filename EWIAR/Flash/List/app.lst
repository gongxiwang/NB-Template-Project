###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        12/Jul/2019  09:14:37
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app.c
#    Command line =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app.c -D
#        LORA_MODULE -lCN
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\ -o
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\Softwares\IAR7.40\arm\INC\c\DLib_Config_Full.h -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\CPU\inc\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-LIB\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Ports\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Source\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\BSP\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\APP\
#        -Om --use_c++_inline
#    List file    =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\app.lst
#    Object file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\app.o
#
###############################################################################

E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app.c
      1          /** @copyright XunFang Communication Tech Limited. All rights reserved. 2019.
      2            * @file  app.c
      3            * @author  walle
      4            * @version  V1.0
      5            * @date  20/05/2019
      6            * @brief  app.c
      7            */
      8          
      9          #include <includes.h>
     10          #include "app_uart.h"
     11          #include "app_led.h"
     12          #include "app_beep.h"
     13          #include "app_adc.h"
     14          #include "app_nbiot.h"
     15          #include "app_device.h"
     16          #include "app_lora.h"
     17          
     18          
     19          /**
     20            * @brief 各个任务的堆栈大小
     21          */

   \                                 In section .bss, align 4
     22          static  OS_STK          App_TaskStartStk[APP_TASK_START_STK_SIZE];		/* 开始任务堆栈大小 */
   \                     App_TaskStartStk:
   \   00000000                      DS8 256

   \                                 In section .bss, align 4
     23          static  OS_STK          App_TaskLedStk[APP_TASK_LED_STK_SIZE];			/* LED任务堆栈大小 */
   \                     App_TaskLedStk:
   \   00000000                      DS8 256
   \   00000100                      DS8 512
   \   00000300                      DS8 512
   \   00000500                      DS8 2048
   \   00000D00                      DS8 512
   \   00000F00                      DS8 2048
     24          static  OS_STK          App_TaskAdcStk[APP_TASK_ADC_STK_SIZE];			/* ADC任务堆栈大小 */
     25          static  OS_STK          App_TaskBeepStk[APP_TASK_BEEP_STK_SIZE];		/* BEEP堆栈大小 */
     26          static  OS_STK			App_TaskNbiotStk[APP_TASK_NBIOT_STK_SIZE];		/* NBIOT堆栈大小 */
     27          static  OS_STK          App_TaskDeviceStk[APP_TASK_DEVICE_STK_SIZE];	/* DEVICE处理堆栈大小 */
     28          static  OS_STK			App_TaskLoraStk[APP_TASK_LORA_STK_SIZE];		/* NBIOT堆栈大小 */
     29          
     30          
     31          
     32          /**
     33            * @brief 函数声明
     34          */
     35          static  void  App_TaskCreate             (void);
     36          static  void  App_TaskStart              (void *p_arg);
     37          
     38          
     39          /**
     40            * @brief	main()函数
     41            * @details 无
     42            * @retval    无
     43            */
     44          
     45          
     46          
     47          

   \                                 In section .text, align 2, keep-with-next
     48          int  main (void)
     49          {
   \                     main: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     50              CPU_INT08U  os_err;
     51              BSP_IntDisAll();                                            /* Disable all ints until we are ready to accept them.  */
   \   00000004   0x.... 0x....      BL       BSP_IntDisAll
     52          
     53              OSInit();                                                   /* Initialize "uC/OS-II, The Real-Time Kernel".         */
   \   00000008   0x.... 0x....      BL       OSInit
     54          
     55              os_err = OSTaskCreateExt((void (*)(void *)) App_TaskStart,  /* Create the start task.                               */						 
     56          							 (void          * ) 0,
     57                                       (OS_STK        * )&App_TaskStartStk[APP_TASK_START_STK_SIZE - 1],
     58                                       (INT8U           ) APP_TASK_START_PRIO,
     59                                       (INT16U          ) APP_TASK_START_PRIO,
     60                                       (OS_STK        * )&App_TaskStartStk[0],
     61                                       (INT32U          ) APP_TASK_START_STK_SIZE,
     62                                       (void          * )0,
     63                                       (INT16U          )(OS_TASK_OPT_STK_CLR | OS_TASK_OPT_STK_CHK));
   \   0000000C   0x....             LDR.N    R0,??DataTable9
   \   0000000E   0x2103             MOVS     R1,#+3
   \   00000010   0x9104             STR      R1,[SP, #+16]
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x9103             STR      R1,[SP, #+12]
   \   00000016   0x2140             MOVS     R1,#+64
   \   00000018   0x9102             STR      R1,[SP, #+8]
   \   0000001A   0x9001             STR      R0,[SP, #+4]
   \   0000001C   0x2103             MOVS     R1,#+3
   \   0000001E   0x9100             STR      R1,[SP, #+0]
   \   00000020   0x460B             MOV      R3,R1
   \   00000022   0xF100 0x02FC      ADD      R2,R0,#+252
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x.... 0x....      ADR.W    R0,App_TaskStart
   \   0000002C   0x.... 0x....      BL       OSTaskCreateExt
   \   00000030   0xF88D 0x0014      STRB     R0,[SP, #+20]
     64          
     65          #if (OS_TASK_NAME_SIZE >= 11)
     66              OSTaskNameSet(APP_TASK_START_PRIO, (CPU_INT08U *)"Start Task", &os_err);
   \   00000034   0xAA05             ADD      R2,SP,#+20
   \   00000036   0x.... 0x....      ADR.W    R1,?_0
   \   0000003A   0x2003             MOVS     R0,#+3
   \   0000003C   0x.... 0x....      BL       OSTaskNameSet
     67          #endif
     68          
     69              OSStart();                                                  /* Start multitasking (i.e. give control to uC/OS-II).  */
   \   00000040   0x.... 0x....      BL       OSStart
     70            
     71              return (0);
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0xB007             ADD      SP,SP,#+28
   \   00000048   0xBD00             POP      {PC}             ;; return
     72          }
     73          
     74          /**
     75            * @brief	任务开始
     76            * @details 启动任务
     77            * @retval    无
     78            */

   \                                 In section .text, align 4, keep-with-next
     79          static  void  App_TaskStart (void *p_arg)
     80          {
   \                     App_TaskStart: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     81              (void)p_arg;
     82              BSP_Init();                                                 /* BSP外设初始化*/
   \   00000002   0x.... 0x....      BL       BSP_Init
     83          	debug_printf("BSP Peripheral Init Over!\r\n");				/* debug */
   \   00000006   0x.... 0x....      ADR.W    R0,?_1
   \   0000000A   0x.... 0x....      BL       debug_printf
     84              OS_CPU_SysTickInit();                                       /* 初始化系统时钟.*/
   \   0000000E   0x.... 0x....      BL       OS_CPU_SysTickInit
     85              App_TaskCreate();                                           /* 创建任务.*/
   \   00000012   0x.... 0x....      BL       App_TaskCreate
     86          	debug_printf("App Task Create Over!\r\n");					/* debug */
   \   00000016   0x.... 0x....      ADR.W    R0,?_2
   \   0000001A   0x.... 0x....      BL       debug_printf
     87              OSTaskDel(APP_TASK_START_PRIO);                             /* 删除启动任务 */   
   \   0000001E   0x2003             MOVS     R0,#+3
   \   00000020   0xE8BD 0x4002      POP      {R1,LR}
   \   00000024   0x.... 0x....      B.W      OSTaskDel
     88          }
     89          
     90          /**
     91            * @brief	任务创建
     92            * @details 内部各个任务创建
     93            * @retval    无
     94            */

   \                                 In section .text, align 2, keep-with-next
     95          static  void  App_TaskCreate (void)
     96          {
   \                     App_TaskCreate: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
     97              CPU_INT08U  os_err;
     98          	/* 创建LED任务 */
     99              os_err = OSTaskCreateExt((void (*)(void *)) App_LED_TASK,
    100                                       (void          * ) 0,
    101                                       (OS_STK        * )&App_TaskLedStk[APP_TASK_LED_STK_SIZE - 1],
    102                                       (INT8U           ) APP_TASK_LED_PRIO,
    103                                       (INT16U          ) APP_TASK_LED_PRIO,
    104                                       (OS_STK        * )&App_TaskLedStk[0],
    105                                       (INT32U          ) APP_TASK_LED_STK_SIZE,
    106                                       (void          * ) 0,
    107                                       (INT16U          )(OS_TASK_OPT_STK_CLR | OS_TASK_OPT_STK_CHK));
   \   00000004   0x....             LDR.N    R4,??DataTable9_1
   \   00000006   0x2003             MOVS     R0,#+3
   \   00000008   0x9004             STR      R0,[SP, #+16]
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x9003             STR      R0,[SP, #+12]
   \   0000000E   0x2040             MOVS     R0,#+64
   \   00000010   0x9002             STR      R0,[SP, #+8]
   \   00000012   0x9401             STR      R4,[SP, #+4]
   \   00000014   0x2004             MOVS     R0,#+4
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x4603             MOV      R3,R0
   \   0000001A   0xF104 0x02FC      ADD      R2,R4,#+252
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR.N    R0,??DataTable9_2
   \   00000022   0x.... 0x....      BL       OSTaskCreateExt
   \   00000026   0xF88D 0x0014      STRB     R0,[SP, #+20]
    108          
    109          #if (OS_TASK_NAME_SIZE >= 9)
    110              OSTaskNameSet(APP_TASK_LED_PRIO, "LED Task", &os_err);
   \   0000002A   0xAA05             ADD      R2,SP,#+20
   \   0000002C   0x.... 0x....      ADR.W    R1,?_3
   \   00000030   0x2004             MOVS     R0,#+4
   \   00000032   0x.... 0x....      BL       OSTaskNameSet
    111          #endif
    112          
    113          	/* 创建ADC任务 */
    114              os_err = OSTaskCreateExt((void (*)(void *)) App_ADC_TASK,
    115                                       (void          * ) 0,
    116                                       (OS_STK        * )&App_TaskAdcStk[APP_TASK_ADC_STK_SIZE - 1],
    117                                       (INT8U           ) APP_TASK_ADC_PRIO,
    118                                       (INT16U          ) APP_TASK_ADC_PRIO,
    119                                       (OS_STK        * )&App_TaskAdcStk[0],
    120                                       (INT32U          ) APP_TASK_ADC_STK_SIZE,
    121                                       (void          * ) 0,
    122                                       (INT16U          )(OS_TASK_OPT_STK_CLR | OS_TASK_OPT_STK_CHK));
   \   00000036   0x2003             MOVS     R0,#+3
   \   00000038   0x9004             STR      R0,[SP, #+16]
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x9003             STR      R0,[SP, #+12]
   \   0000003E   0x2080             MOVS     R0,#+128
   \   00000040   0x9002             STR      R0,[SP, #+8]
   \   00000042   0xF504 0x7080      ADD      R0,R4,#+256
   \   00000046   0x9001             STR      R0,[SP, #+4]
   \   00000048   0x2007             MOVS     R0,#+7
   \   0000004A   0x9000             STR      R0,[SP, #+0]
   \   0000004C   0x4603             MOV      R3,R0
   \   0000004E   0xF504 0x723F      ADD      R2,R4,#+764
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x....             LDR.N    R0,??DataTable9_3
   \   00000056   0x.... 0x....      BL       OSTaskCreateExt
   \   0000005A   0xF88D 0x0014      STRB     R0,[SP, #+20]
    123          
    124          #if (OS_TASK_NAME_SIZE >= 9)
    125              OSTaskNameSet(APP_TASK_ADC_PRIO, "ADC TASK", &os_err);
   \   0000005E   0xAA05             ADD      R2,SP,#+20
   \   00000060   0x.... 0x....      ADR.W    R1,?_4
   \   00000064   0x2007             MOVS     R0,#+7
   \   00000066   0x.... 0x....      BL       OSTaskNameSet
    126          #endif
    127          	
    128          	/* 创建BEEP任务 */
    129              os_err = OSTaskCreateExt((void (*)(void *)) App_BEEP_TASK,
    130                                       (void          * ) 0,
    131                                       (OS_STK        * )&App_TaskBeepStk[APP_TASK_BEEP_STK_SIZE - 1],
    132                                       (INT8U           ) APP_TASK_BEEP_PRIO,
    133                                       (INT16U          ) APP_TASK_BEEP_PRIO,
    134                                       (OS_STK        * )&App_TaskBeepStk[0],
    135                                       (INT32U          ) APP_TASK_BEEP_STK_SIZE,
    136                                       (void          * ) 0,
    137                                       (INT16U          )(OS_TASK_OPT_STK_CLR | OS_TASK_OPT_STK_CHK));
   \   0000006A   0x2003             MOVS     R0,#+3
   \   0000006C   0x9004             STR      R0,[SP, #+16]
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x9003             STR      R0,[SP, #+12]
   \   00000072   0x2080             MOVS     R0,#+128
   \   00000074   0x9002             STR      R0,[SP, #+8]
   \   00000076   0xF504 0x7040      ADD      R0,R4,#+768
   \   0000007A   0x9001             STR      R0,[SP, #+4]
   \   0000007C   0x2006             MOVS     R0,#+6
   \   0000007E   0x9000             STR      R0,[SP, #+0]
   \   00000080   0x4603             MOV      R3,R0
   \   00000082   0xF204 0x42FC      ADDW     R2,R4,#+1276
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x....             LDR.N    R0,??DataTable9_4
   \   0000008A   0x.... 0x....      BL       OSTaskCreateExt
   \   0000008E   0xF88D 0x0014      STRB     R0,[SP, #+20]
    138          
    139          #if (OS_TASK_NAME_SIZE >= 9)
    140              OSTaskNameSet(APP_TASK_BEEP_PRIO, "BEEP TASK", &os_err);
   \   00000092   0xAA05             ADD      R2,SP,#+20
   \   00000094   0x.... 0x....      ADR.W    R1,?_5
   \   00000098   0x2006             MOVS     R0,#+6
   \   0000009A   0x.... 0x....      BL       OSTaskNameSet
    141          #endif
    142          
    143          	/* 创建设备任务 */
    144          	os_err = OSTaskCreateExt((void (*)(void *)) App_DEVICE_TASK,
    145          								 (void			* ) 0,
    146          								 (OS_STK		* )&App_TaskDeviceStk[APP_TASK_DEVICE_STK_SIZE - 1],
    147          								 (INT8U 		  ) APP_TASK_DEVICE_PRIO,
    148          								 (INT16U		  ) APP_TASK_DEVICE_PRIO,
    149          								 (OS_STK		* )&App_TaskDeviceStk[0],
    150          								 (INT32U		  ) APP_TASK_DEVICE_STK_SIZE,
    151          								 (void			* ) 0,
    152          								 (INT16U		  )(OS_TASK_OPT_STK_CLR | OS_TASK_OPT_STK_CHK));
   \   0000009E   0x2003             MOVS     R0,#+3
   \   000000A0   0x9004             STR      R0,[SP, #+16]
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x9003             STR      R0,[SP, #+12]
   \   000000A6   0x2080             MOVS     R0,#+128
   \   000000A8   0x9002             STR      R0,[SP, #+8]
   \   000000AA   0xF504 0x6050      ADD      R0,R4,#+3328
   \   000000AE   0x9001             STR      R0,[SP, #+4]
   \   000000B0   0x2009             MOVS     R0,#+9
   \   000000B2   0x9000             STR      R0,[SP, #+0]
   \   000000B4   0x4603             MOV      R3,R0
   \   000000B6   0xF604 0x62FC      ADDW     R2,R4,#+3836
   \   000000BA   0x2100             MOVS     R1,#+0
   \   000000BC   0x....             LDR.N    R0,??DataTable9_5
   \   000000BE   0x.... 0x....      BL       OSTaskCreateExt
   \   000000C2   0xF88D 0x0014      STRB     R0,[SP, #+20]
    153          	
    154          #if (OS_TASK_NAME_SIZE >= 9)
    155          		OSTaskNameSet(APP_TASK_DEVICE_PRIO, "DEVICE TASK", &os_err);
   \   000000C6   0xAA05             ADD      R2,SP,#+20
   \   000000C8   0x.... 0x....      ADR.W    R1,?_6
   \   000000CC   0x2009             MOVS     R0,#+9
   \   000000CE   0x.... 0x....      BL       OSTaskNameSet
    156          #endif
    157          
    158          #if defined (NBIOT_MODULE)	/* 如果定义了NBIOT模块 */
    159          	/* 创建NBIOT任务 */
    160          	os_err = OSTaskCreateExt((void (*)(void *)) App_NBIOT_TASK,
    161                                       (void          * ) 0,
    162                                       (OS_STK        * )&App_TaskNbiotStk[APP_TASK_NBIOT_STK_SIZE - 1],
    163                                       (INT8U           ) APP_TASK_NBIOT_PRIO,
    164                                       (INT16U          ) APP_TASK_NBIOT_PRIO,
    165                                       (OS_STK        * )&App_TaskNbiotStk[0],
    166                                       (INT32U          ) APP_TASK_NBIOT_STK_SIZE,
    167                                       (void          * ) 0,
    168                                       (INT16U          )(OS_TASK_OPT_STK_CLR | OS_TASK_OPT_STK_CHK));
    169          
    170          #if (OS_TASK_NAME_SIZE >= 9)
    171              OSTaskNameSet(APP_TASK_NBIOT_PRIO, "NBIOT TASK", &os_err);
    172          #endif
    173          	
    174          #endif	
    175          
    176          #if defined (LORA_MODULE)		/* 如果定义了LORA模块 */
    177          	/* 创建LORA任务 */
    178          	os_err = OSTaskCreateExt((void (*)(void *)) App_LORA_TASK,
    179                                       (void          * ) 0,
    180                                       (OS_STK        * )&App_TaskLoraStk[APP_TASK_LORA_STK_SIZE - 1],
    181                                       (INT8U           ) APP_TASK_LORA_PRIO,
    182                                       (INT16U          ) APP_TASK_LORA_PRIO,
    183                                       (OS_STK        * )&App_TaskNbiotStk[0],
    184                                       (INT32U          ) APP_TASK_LORA_STK_SIZE,
    185                                       (void          * ) 0,
    186                                       (INT16U          )(OS_TASK_OPT_STK_CLR | OS_TASK_OPT_STK_CHK));
   \   000000D2   0x2003             MOVS     R0,#+3
   \   000000D4   0x9004             STR      R0,[SP, #+16]
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x9003             STR      R0,[SP, #+12]
   \   000000DA   0xF44F 0x7000      MOV      R0,#+512
   \   000000DE   0x9002             STR      R0,[SP, #+8]
   \   000000E0   0xF504 0x60A0      ADD      R0,R4,#+1280
   \   000000E4   0x9001             STR      R0,[SP, #+4]
   \   000000E6   0x200A             MOVS     R0,#+10
   \   000000E8   0x9000             STR      R0,[SP, #+0]
   \   000000EA   0x4603             MOV      R3,R0
   \   000000EC   0xF504 0x52B0      ADD      R2,R4,#+5632
   \   000000F0   0x32FC             ADDS     R2,R2,#+252
   \   000000F2   0x2100             MOVS     R1,#+0
   \   000000F4   0x....             LDR.N    R0,??DataTable9_6
   \   000000F6   0x.... 0x....      BL       OSTaskCreateExt
   \   000000FA   0xF88D 0x0014      STRB     R0,[SP, #+20]
    187          
    188          #if (OS_TASK_NAME_SIZE >= 9)
    189              OSTaskNameSet(APP_TASK_LORA_PRIO, "LORA TASK", &os_err);
   \   000000FE   0xAA05             ADD      R2,SP,#+20
   \   00000100   0x.... 0x....      ADR.W    R1,?_7
   \   00000104   0x200A             MOVS     R0,#+10
   \   00000106   0x.... 0x....      BL       OSTaskNameSet
    190          #endif
    191          #endif
    192          
    193          }
   \   0000010A   0xB006             ADD      SP,SP,#+24
   \   0000010C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     App_TaskStartStk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     App_TaskLedStk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     App_LED_TASK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     App_ADC_TASK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     App_BEEP_TASK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     App_DEVICE_TASK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x........         DC32     App_LORA_TASK

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x53 0x74          DC8 "Start Task"
   \              0x61 0x72    
   \              0x74 0x20    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x42 0x53          DC8 "BSP Peripheral Init Over!\015\012"
   \              0x50 0x20    
   \              0x50 0x65    
   \              0x72 0x69    
   \              0x70 0x68    
   \              0x65 0x72    
   \              0x61 0x6C    
   \              0x20 0x49    
   \              0x6E 0x69    
   \              0x74 0x20    
   \              0x4F 0x76    
   \              0x65 0x72    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x41 0x70          DC8 "App Task Create Over!\015\012"
   \              0x70 0x20    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x20 0x43    
   \              0x72 0x65    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x4F 0x76    
   \              0x65 0x72    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x4C 0x45          DC8 "LED Task"
   \              0x44 0x20    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x41 0x44          DC8 "ADC TASK"
   \              0x43 0x20    
   \              0x54 0x41    
   \              0x53 0x4B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x42 0x45          DC8 "BEEP TASK"
   \              0x45 0x50    
   \              0x20 0x54    
   \              0x41 0x53    
   \              0x4B 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x44 0x45          DC8 "DEVICE TASK"
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x20 0x54    
   \              0x41 0x53    
   \              0x4B 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x4C 0x4F          DC8 "LORA TASK"
   \              0x52 0x41    
   \              0x20 0x54    
   \              0x41 0x53    
   \              0x4B 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   App_TaskCreate
        32   -> OSTaskCreateExt
        32   -> OSTaskNameSet
       8   App_TaskStart
         8   -> App_TaskCreate
         8   -> BSP_Init
         0   -> OSTaskDel
         8   -> OS_CPU_SysTickInit
         8   -> debug_printf
      32   main
        32   -> BSP_IntDisAll
        32   -> OSInit
        32   -> OSStart
        32   -> OSTaskCreateExt
        32   -> OSTaskNameSet


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
      12  ?_0
      28  ?_1
      24  ?_2
      12  ?_3
      12  ?_4
      12  ?_5
      12  ?_6
      12  ?_7
     270  App_TaskCreate
    5888  App_TaskLedStk
          App_TaskAdcStk
          App_TaskBeepStk
          App_TaskNbiotStk
          App_TaskDeviceStk
          App_TaskLoraStk
      40  App_TaskStart
     256  App_TaskStartStk
      74  main

 
 6 144 bytes in section .bss
   536 bytes in section .text
 
   536 bytes of CODE memory
 6 144 bytes of DATA memory

Errors: none
Warnings: none
