###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        12/Jul/2019  09:14:37
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app_CO2.c
#    Command line =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app_CO2.c -D
#        LORA_MODULE -lCN
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\ -o
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\Softwares\IAR7.40\arm\INC\c\DLib_Config_Full.h -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\CPU\inc\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-LIB\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Ports\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Source\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\BSP\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\APP\
#        -Om --use_c++_inline
#    List file    =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\app_CO2.lst
#    Object file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\app_CO2.o
#
###############################################################################

E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app_CO2.c
      1          /** Copyright(c) 2015, XunFang Tech Limited. All rights reserved.
      2            * @file		app_CO2.c
      3            * @author		walle
      4            * @version	V1.0.0
      5            * @date		31/5/2019
      6            * @brief		CO2传感器应用函数
      7            */
      8          #include "bsp.h"
      9          #include "app_CO2.h"
     10          #include "bsp_modbus.h"
     11          #include "bsp_uart.h"
     12          
     13          
     14          /***************************************************
     15          寄存器地址 内容 操作 范围及定义说明
     16          0000H  湿度值 只读 0~1000
     17          0001H  温度值 只读 -400~1000
     18          0002H  CO2浓度值 只读 0~5000
     19          0030H  温度上限报警值 读写 -400~1000
     20          0031H  温度下限报警值 读写 -400~1000
     21          0032H  温度报警回差值 读写 0~1000
     22          0033H  温度校准值 读写 -400~1000
     23          0034H  温度继电器使能 读写 1为使能0为失能
     24          0035H  湿度上限报警值 读写 0~1000
     25          0036H  湿度下限报警值 读写 0~1000
     26          0037H  湿度报警回差值 读写 0~1000
     27          0038H  湿度校准值 读写 -400~1000
     28          0039H  湿度继电器使能 读写 1为使能0为失能
     29          ***************************************************/
     30          
     31          

   \                                 In section .bss, align 4
     32          static ST_CO2_CTL st_CO2_Ctl = {0};			/* CO2控制结构体 		*/
   \                     st_CO2_Ctl:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
     33          static ST_ModBusPack st_ModBusPack = {0};	/* ModBus结构体 		*/
   \                     st_ModBusPack:
   \   00000000                      DS8 24
     34          
     35          /**
     36            * @brief 读取传感器CO2值
     37           */

   \                                 In section .text, align 2, keep-with-next
     38          void ReadCO2SensorValue(void)
     39          {
   \                     ReadCO2SensorValue: (+1)
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
     40          	u8 TempData[16] = {0};			/* 数据缓冲 */
   \   00000002   0xA800             ADD      R0,SP,#+0
   \   00000004   0x2110             MOVS     R1,#+16
   \   00000006   0x.... 0x....      BL       __aeabi_memclr4
     41          	u32 timeout = st_CO2_Ctl.timeout;
   \   0000000A   0x....             LDR.N    R4,??DataTable2
   \   0000000C   0x68A5             LDR      R5,[R4, #+8]
     42          	if(st_CO2_Ctl.TryCount != 0)
   \   0000000E   0x68E0             LDR      R0,[R4, #+12]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD02C             BEQ.N    ??ReadCO2SensorValue_0
     43          	{
     44          		/************************************************************
     45          		读取设备地址 0x01 的 CO2 值
     46          		地址码 功能码 		起始地址 		数据长度 		校验码低位 校验码高位
     47          		0x01 	0x03 	0x00 0x02 	0x00 0x01 	0x25 		0xCA
     48          		*************************************************************/
     49          
     50          		st_ModBusPack.data[0] = 0x00;
   \   00000014   0x....             LDR.N    R6,??DataTable2_1
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x7130             STRB     R0,[R6, #+4]
     51          		st_ModBusPack.data[1] = 0x02;
   \   0000001A   0x2002             MOVS     R0,#+2
   \   0000001C   0x7170             STRB     R0,[R6, #+5]
     52          		st_ModBusPack.data[2] = 0x00;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x71B0             STRB     R0,[R6, #+6]
     53          		st_ModBusPack.data[3] = 0x01;
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x71F0             STRB     R0,[R6, #+7]
     54          		
     55          		ModBusTxPack(TempData, &st_ModBusPack);							/* 组包发送 */
   \   00000026   0x4631             MOV      R1,R6
   \   00000028   0xA800             ADD      R0,SP,#+0
   \   0000002A   0x.... 0x....      BL       ModBusTxPack
   \   0000002E   0xE005             B.N      ??ReadCO2SensorValue_1
     56          
     57          		/* 等待接收数据 */
     58          		while(timeout --)/* 5S */
     59          		{
     60          			if(WaitUartDataReceive(TempData, CO2SensorRecvLen) == 0x00)	/* 等待接收数据 */
     61          			{
     62          				break;
     63          			}
     64          			OSTimeDlyHMSM(0, 0, 0, 1); 									/* 需要延迟10ms */	
   \                     ??ReadCO2SensorValue_2: (+1)
   \   00000030   0x2301             MOVS     R3,#+1
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0x4611             MOV      R1,R2
   \   00000036   0x4608             MOV      R0,R1
   \   00000038   0x.... 0x....      BL       OSTimeDlyHMSM
   \                     ??ReadCO2SensorValue_1: (+1)
   \   0000003C   0x4628             MOV      R0,R5
   \   0000003E   0x1E45             SUBS     R5,R0,#+1
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD005             BEQ.N    ??ReadCO2SensorValue_3
   \   00000044   0x2107             MOVS     R1,#+7
   \   00000046   0xA800             ADD      R0,SP,#+0
   \   00000048   0x.... 0x....      BL       WaitUartDataReceive
   \   0000004C   0x2800             CMP      R0,#+0
   \   0000004E   0xD1EF             BNE.N    ??ReadCO2SensorValue_2
     65          		}
     66          
     67          		/* 判断是否是超时退出的循环 */
     68          		if(timeout == 0)
   \                     ??ReadCO2SensorValue_3: (+1)
   \   00000050   0x2D00             CMP      R5,#+0
   \   00000052   0xD103             BNE.N    ??ReadCO2SensorValue_4
     69          		{
     70          			st_CO2_Ctl.TryCount ++;
   \   00000054   0x68E0             LDR      R0,[R4, #+12]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x60E0             STR      R0,[R4, #+12]
   \   0000005A   0xBD7F             POP      {R0-R6,PC}
     71          		}
     72          		else
     73          		{
     74          			ModBusBufToPack(&st_ModBusPack, TempData);					/* 把数据赋值到PACK */
   \                     ??ReadCO2SensorValue_4: (+1)
   \   0000005C   0xA900             ADD      R1,SP,#+0
   \   0000005E   0x4630             MOV      R0,R6
   \   00000060   0x.... 0x....      BL       ModBusBufToPack
     75          			st_CO2_Ctl.CO2Value = CalculaCO2SensorValue(st_ModBusPack.data, st_ModBusPack.datalen);
   \   00000064   0x78F1             LDRB     R1,[R6, #+3]
   \   00000066   0x1D30             ADDS     R0,R6,#+4
   \   00000068   0x.... 0x....      BL       CalculaCO2SensorValue
   \   0000006C   0x80E0             STRH     R0,[R4, #+6]
     76          		}
     77          
     78          	}
     79          }
   \                     ??ReadCO2SensorValue_0: (+1)
   \   0000006E   0xBD7F             POP      {R0-R6,PC}       ;; return
     80          
     81          /**
     82            * @brief CO2传感器初始化
     83           */

   \                                 In section .text, align 2, keep-with-next
     84          void InitCO2Sensor(void)
     85          {
   \                     InitCO2Sensor: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     86          	st_CO2_Ctl.timeout = 5000;								/* 5秒左右 */
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0xF241 0x3188      MOVW     R1,#+5000
   \   00000008   0x6081             STR      R1,[R0, #+8]
     87          	st_CO2_Ctl.TryCount = 5;								/* 尝试发送5次 */
   \   0000000A   0x2105             MOVS     R1,#+5
   \   0000000C   0x60C1             STR      R1,[R0, #+12]
     88          	st_CO2_Ctl.Sensor_addr = CO2SensorAddr;					/* 地址赋值 */
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
     89          	st_ModBusPack.address = st_CO2_Ctl.Sensor_addr;			/* ModBus设备地址赋值 */
   \   00000012   0x....             LDR.N    R0,??DataTable2_1
   \   00000014   0x7001             STRB     R1,[R0, #+0]
     90          	st_ModBusPack.function = FUNCODE;						/* 功能码 */
   \   00000016   0x2103             MOVS     R1,#+3
   \   00000018   0x7041             STRB     R1,[R0, #+1]
     91          	OPENRS_485;												/* 打开RS485通信 */
   \   0000001A   0x....             LDR.N    R4,??DataTable2_2  ;; 0x40010c00
   \   0000001C   0x2140             MOVS     R1,#+64
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0x.... 0x....      BL       GPIO_SetBits
   \   00000024   0x2120             MOVS     R1,#+32
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       GPIO_ResetBits
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000032   0x.... 0x....      B.W      SetUSART_MODE
     92          }
     93          
     94          /**
     95            * @brief 解析CO2数据
     96           */

   \                                 In section .text, align 2, keep-with-next
     97          u16 CalculaCO2SensorValue(u8* CO2Data, u32 len)
     98          {
     99          	u16 CO2Value = 0;
   \                     CalculaCO2SensorValue: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
    100          	if(len != 0)
   \   00000002   0x2900             CMP      R1,#+0
   \   00000004   0xD003             BEQ.N    ??CalculaCO2SensorValue_0
    101          	{
    102          		CO2Value = ((CO2Data[0] << 8) | CO2Data[1]);
   \   00000006   0x7801             LDRB     R1,[R0, #+0]
   \   00000008   0x7840             LDRB     R0,[R0, #+1]
   \   0000000A   0xEA40 0x2201      ORR      R2,R0,R1, LSL #+8
    103          	}
    104          	return CO2Value;
   \                     ??CalculaCO2SensorValue_0: (+1)
   \   0000000E   0x4610             MOV      R0,R2
   \   00000010   0x4770             BX       LR               ;; return
    105          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     st_CO2_Ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     st_ModBusPack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x40010C00         DC32     0x40010c00

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   CalculaCO2SensorValue
       8   InitCO2Sensor
         8   -> GPIO_ResetBits
         8   -> GPIO_SetBits
         0   -> SetUSART_MODE
      32   ReadCO2SensorValue
        32   -> CalculaCO2SensorValue
        32   -> ModBusBufToPack
        32   -> ModBusTxPack
        32   -> OSTimeDlyHMSM
        32   -> WaitUartDataReceive
        32   -> __aeabi_memclr4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
      16  ?_0
      18  CalculaCO2SensorValue
      54  InitCO2Sensor
     112  ReadCO2SensorValue
      16  st_CO2_Ctl
      24  st_ModBusPack

 
  40 bytes in section .bss
  16 bytes in section .rodata
 196 bytes in section .text
 
 196 bytes of CODE  memory
  16 bytes of CONST memory
  40 bytes of DATA  memory

Errors: none
Warnings: none
