###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        12/Jul/2019  09:14:38
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\App_RF900M.c
#    Command line =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\App_RF900M.c
#        -D LORA_MODULE -lCN
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\ -o
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\Softwares\IAR7.40\arm\INC\c\DLib_Config_Full.h -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\CPU\inc\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-LIB\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Ports\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Source\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\BSP\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\APP\
#        -Om --use_c++_inline
#    List file    =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\App_RF900M.lst
#    Object file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\App_RF900M.o
#
###############################################################################

E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\App_RF900M.c
      1          /** Copyright(c) 2019, XunFang Tech Limited. All rights reserved.
      2            * @file		App_RF900M.c
      3            * @author		walle
      4            * @version	V1.0.0
      5            * @date		31/5/2019
      6            * @brief		app接口函数文件
      7            */
      8          #include "App_RF900M.h"
      9          #include "UHF_reader_Driver.h"
     10          #include "string.h"
     11          #include "bsp_dma.h"
     12          #include "app_nbiot.h"
     13          #include "app_device.h"
     14          #include "app_uart.h"
     15          #include "app_beep.h"
     16          
     17          #define UHF900M_ADDR 0x01		/* 定义900M的设备地址 */
     18          
     19          
     20          /**
     21            * @brief   900M寻标签
     22            * @param   packet 数据包
     23            * @retval  寻标签结果
     24           */

   \                                 In section .text, align 2, keep-with-next
     25          int _cmd_900m_list_card(Device_packet_t *packet, PST_UHF_Device pst_UHF_Dev, PST_DEVICE pst_device)
     26          {
   \                     _cmd_900m_list_card: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4605             MOV      R5,R0
   \   00000004   0x460C             MOV      R4,R1
     27          	u8 epc_len;
     28          	pst_UHF_Dev->cmd = UHF_CMD_REAL_TIME_INVENTORY;
   \   00000006   0x2089             MOVS     R0,#+137
   \   00000008   0xF884 0x0126      STRB     R0,[R4, #+294]
     29          	epc_len = UhfWRdata_list(pst_UHF_Dev);
   \   0000000C   0x4620             MOV      R0,R4
   \   0000000E   0x.... 0x....      BL       UhfWRdata_list
   \   00000012   0x0006             MOVS     R6,R0
     30          
     31          #if 1
     32          	if(epc_len)
   \   00000014   0xD01E             BEQ.N    ??_cmd_900m_list_card_0
     33          	{
     34          		packet->ack = ACK_OK;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x71E8             STRB     R0,[R5, #+7]
     35          		packet->data_size = epc_len;
   \   0000001A   0x722E             STRB     R6,[R5, #+8]
     36          		memcpy(packet->data, pst_UHF_Dev->st_UHF_epc.epc, epc_len);
   \   0000001C   0x4632             MOV      R2,R6
   \   0000001E   0x1D61             ADDS     R1,R4,#+5
   \   00000020   0xF105 0x0009      ADD      R0,R5,#+9
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy
     37          		debug_printf("list 900m card epc:");
   \   00000028   0x.... 0x....      ADR.W    R0,?_0
   \   0000002C   0x.... 0x....      BL       debug_printf
     38          		for(int i = 0; i < epc_len; i ++)
   \   00000030   0x2500             MOVS     R5,#+0
   \   00000032   0xE006             B.N      ??_cmd_900m_list_card_1
     39          		{
     40          			debug_printf("%02X ", pst_UHF_Dev->st_UHF_epc.epc[i]);
   \                     ??_cmd_900m_list_card_2: (+1)
   \   00000034   0x1928             ADDS     R0,R5,R4
   \   00000036   0x7941             LDRB     R1,[R0, #+5]
   \   00000038   0x.... 0x....      ADR.W    R0,?_1
   \   0000003C   0x.... 0x....      BL       debug_printf
     41          		}
   \   00000040   0x1C6D             ADDS     R5,R5,#+1
   \                     ??_cmd_900m_list_card_1: (+1)
   \   00000042   0x42B5             CMP      R5,R6
   \   00000044   0xDBF6             BLT.N    ??_cmd_900m_list_card_2
     42          		debug_printf("\n");
   \   00000046   0x....             ADR.N    R0,??DataTable14  ;; "\n"
   \   00000048   0x.... 0x....      BL       debug_printf
     43          		Beep_output_time(30);
   \   0000004C   0x201E             MOVS     R0,#+30
   \   0000004E   0x.... 0x....      BL       Beep_output_time
   \   00000052   0xE003             B.N      ??_cmd_900m_list_card_3
     44          	}
     45          	else
     46          	{
     47          		packet->ack = ACK_CARD_HANDLE_ERR;
   \                     ??_cmd_900m_list_card_0: (+1)
   \   00000054   0x2008             MOVS     R0,#+8
   \   00000056   0x71E8             STRB     R0,[R5, #+7]
     48          		packet->data_size = 0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x7228             STRB     R0,[R5, #+8]
     49          	}
     50          	/* 发送EPC数据到NBIOT平台 */;
     51          	GropPackNBMsgSend(pst_UHF_Dev->st_UHF_epc.epc, epc_len, 0x00);
   \                     ??_cmd_900m_list_card_3: (+1)
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x4631             MOV      R1,R6
   \   00000060   0x1D60             ADDS     R0,R4,#+5
   \   00000062   0x.... 0x....      BL       GropPackNBMsgSend
     52          #endif
     53          	return 0;
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0xBD70             POP      {R4-R6,PC}       ;; return
     54          }
     55          
     56          /**
     57            * @brief   900M读标签
     58            * @param   packet 数据包
     59            * @retval  寻标签结果
     60           */

   \                                 In section .text, align 2, keep-with-next
     61          int _cmd_900m_read_card(Device_packet_t *packet, PST_UHF_Device pst_UHF_Dev, PST_DEVICE pst_device)
     62          {
   \                     _cmd_900m_read_card: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB092             SUB      SP,SP,#+72
   \   00000004   0x460C             MOV      R4,R1
     63          	u8 block_data[16] = {0};
     64          	u8 ret = 0;
     65          	ST_READ_TAG st_READ_TAG = {0};							/* 读卡数据保存结构体 */
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x2144             MOVS     R1,#+68
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
     66          	pst_UHF_Dev->cmd = UHF_CMD_READ;						/* 读标签命令 */
   \   0000000E   0x2081             MOVS     R0,#+129
   \   00000010   0xF884 0x0126      STRB     R0,[R4, #+294]
     67          	ret = UhfWRdata_read(pst_UHF_Dev, &st_READ_TAG);		/* 读卡 */
   \   00000014   0xA900             ADD      R1,SP,#+0
   \   00000016   0x4620             MOV      R0,R4
   \   00000018   0x.... 0x....      BL       UhfWRdata_read
     68          	/* 发送读卡数据到NBIOT平台 */;
     69          	GropPackNBMsgSend(st_READ_TAG.Data, st_READ_TAG.DataLen, ret);
   \   0000001C   0x4602             MOV      R2,R0
   \   0000001E   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   00000022   0xF10D 0x0003      ADD      R0,SP,#+3
   \   00000026   0x.... 0x....      BL       GropPackNBMsgSend
     70          	return 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xB012             ADD      SP,SP,#+72
   \   0000002E   0xBD10             POP      {R4,PC}          ;; return
     71          }
     72          
     73          /**
     74            * @brief   900M写标签
     75            * @param   packet 数据包
     76            * @retval  寻标签结果
     77           */

   \                                 In section .text, align 2, keep-with-next
     78          int _cmd_900m_write_card(Device_packet_t *packet, PST_UHF_Device pst_UHF_Dev, PST_DEVICE pst_device)
     79          {
   \                     _cmd_900m_write_card: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     80          	UhfSelect_TAG(packet, pst_UHF_Dev);				/* 选定标签 */
   \   00000006   0x.... 0x....      BL       UhfSelect_TAG
     81          	pst_UHF_Dev->cmd = UHF_CMD_WRITE;				/* 写标签命令 */
   \   0000000A   0x2082             MOVS     R0,#+130
   \   0000000C   0xF885 0x0126      STRB     R0,[R5, #+294]
     82              if(UhfWRdata_write(pst_UHF_Dev, packet))		/*写卡*/
   \   00000010   0x4621             MOV      R1,R4
   \   00000012   0x4628             MOV      R0,R5
   \   00000014   0x.... 0x....      BL       UhfWRdata_write
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD00A             BEQ.N    ??_cmd_900m_write_card_0
     83              {
     84                  packet->ack = ACK_OK;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x71E0             STRB     R0,[R4, #+7]
     85                  packet->data_size = 0;
   \   00000020   0x7220             STRB     R0,[R4, #+8]
     86                  debug_printf("write 900m card block_data:");
   \   00000022   0x.... 0x....      ADR.W    R0,?_4
   \   00000026   0x.... 0x....      BL       debug_printf
     87                  Beep_output_time(30);
   \   0000002A   0x201E             MOVS     R0,#+30
   \   0000002C   0x.... 0x....      BL       Beep_output_time
   \   00000030   0xE003             B.N      ??_cmd_900m_write_card_1
     88              }
     89              else
     90              {
     91                  packet->ack = ACK_CARD_HANDLE_ERR;
   \                     ??_cmd_900m_write_card_0: (+1)
   \   00000032   0x2008             MOVS     R0,#+8
   \   00000034   0x71E0             STRB     R0,[R4, #+7]
     92                  packet->data_size = 0;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x7220             STRB     R0,[R4, #+8]
     93              }
     94          	/* 发送写卡数据到NBIOT平台 */;
     95          	GropPackNBMsgSend(pst_UHF_Dev->st_UHF_epc.epc , pst_UHF_Dev->st_UHF_epc.epc_length, 0x00);
   \                     ??_cmd_900m_write_card_1: (+1)
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x7829             LDRB     R1,[R5, #+0]
   \   0000003E   0x1D68             ADDS     R0,R5,#+5
   \   00000040   0x.... 0x....      BL       GropPackNBMsgSend
     96              return 0;
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     97          }
     98          
     99          /**
    100            * @brief   900M初始化命令
    101            * @param   pst_UHF_device
    102            * @retval  返回状态
    103           */

   \                                 In section .text, align 2, keep-with-next
    104          EN_UHF_STATUS UHF_900M_Init(PST_UHF_Device pst_UHF_device, PST_DEVICE pst_device)
    105          {
   \                     UHF_900M_Init: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    106          	pst_UHF_device->Timeout = 5000;									/* 设置超时时间 */
   \   00000006   0xF241 0x3088      MOVW     R0,#+5000
   \   0000000A   0xF8C4 0x012C      STR      R0,[R4, #+300]
    107          	pst_device->DeviceNum = DEVICE_RFID_900M;
   \   0000000E   0x2052             MOVS     R0,#+82
   \   00000010   0x7028             STRB     R0,[R5, #+0]
    108          	UHF_900M_RESET(pst_UHF_device, pst_device);						/* 重启900M模块 */
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       UHF_900M_RESET
    109          	UHF_900M_SETADDR(pst_UHF_device, pst_device);					/* 设置900M模块工作地址 */
   \   00000018   0x4629             MOV      R1,R5
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0x.... 0x....      BL       UHF_900M_SETADDR
    110          	UHF_SET_ANTENNA(pst_UHF_device, EN_UHF_ANTENNA_1, pst_device);	/* 设置工作天线 */
   \   00000020   0x462A             MOV      R2,R5
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       UHF_SET_ANTENNA
    111          	UHF_SET_POWER(pst_UHF_device, 30, pst_device);					/* 设置工作功率 */
   \   0000002A   0x462A             MOV      R2,R5
   \   0000002C   0x211E             MOVS     R1,#+30
   \   0000002E   0x4620             MOV      R0,R4
   \   00000030   0x.... 0x....      BL       UHF_SET_POWER
    112          	OSTimeDlyHMSM(0, 0, 1, 0); 										/* 延迟等待1s模块重启完成 */
   \   00000034   0x2300             MOVS     R3,#+0
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x4619             MOV      R1,R3
   \   0000003A   0x4608             MOV      R0,R1
   \   0000003C   0x.... 0x....      BL       OSTimeDlyHMSM
    113          	debug_printf("UHF 900M Init Over!!!\r\n");
   \   00000040   0x.... 0x....      ADR.W    R0,?_5
   \   00000044   0x.... 0x....      BL       debug_printf
    114          	return UHF_STATUS_SUCCESS;
   \   00000048   0x2010             MOVS     R0,#+16
   \   0000004A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    115          }
    116          
    117          /**
    118            * @brief   900M设置地址
    119            * @param   pst_UHF_device
    120            * @retval  返回状态
    121           */

   \                                 In section .text, align 2, keep-with-next
    122          EN_UHF_STATUS UHF_900M_SETADDR(PST_UHF_Device pst_UHF_device, PST_DEVICE pst_device)
    123          {
   \                     UHF_900M_SETADDR: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
    124          	EN_UHF_STATUS ret = UHF_STATUS_SUCCESS;
    125          	debug_printf("UHF900M Set Addr Start!!!\r\n");		/* debug printf */
   \   00000008   0x.... 0x....      ADR.W    R0,?_6
   \   0000000C   0x.... 0x....      BL       debug_printf
    126          	u8 UHF_ADDR = UHF900M_ADDR;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xF88D 0x0000      STRB     R0,[SP, #+0]
    127          	u32 timecount = pst_UHF_device->Timeout;
   \   00000016   0xF8D4 0x612C      LDR      R6,[R4, #+300]
    128          	pst_UHF_device->address = UHF_ADDR;					/* 首先设置读写地址 */	
   \   0000001A   0xF204 0x1025      ADDW     R0,R4,#+293
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x7001             STRB     R1,[R0, #+0]
    129          	pst_UHF_device->cmd = UHF_CMD_SET_READER_ADDRESS;	/* 首先设置读写地址 */	
   \   00000022   0x2173             MOVS     R1,#+115
   \   00000024   0x7041             STRB     R1,[R0, #+1]
    130          	UHF_Tx_PACK(pst_UHF_device, &UHF_ADDR, 0x01);
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0xA900             ADD      R1,SP,#+0
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0x.... 0x....      BL       UHF_Tx_PACK
    131          	debug_printf("UHF900M Set Addr Over!!!\r\n");			/* debug printf */
   \   00000030   0x.... 0x....      ADR.W    R0,?_7
   \   00000034   0x.... 0x....      BL       debug_printf
    132          	pst_device->DeviceAct = EN_UHF_SETADDR;					/* 处理状态为地址设置 */
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x7068             STRB     R0,[R5, #+1]
   \   0000003C   0xE005             B.N      ??UHF_900M_SETADDR_0
    133          	while(timecount --)						/* 等待寻卡回应 6*800 = 4.8S */
    134          	{
    135          		if(WaitUHFDataReceive(pst_UHF_device) == UHF_STATUS_SUCCESS)
    136          		{
    137          			break;/* 跳出整个while循环 */
    138          		}
    139          		OSTimeDlyHMSM(0, 0, 0, 1); 							/* 切换任务防止跑死 */
   \                     ??UHF_900M_SETADDR_1: (+1)
   \   0000003E   0x2301             MOVS     R3,#+1
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x4611             MOV      R1,R2
   \   00000044   0x4608             MOV      R0,R1
   \   00000046   0x.... 0x....      BL       OSTimeDlyHMSM
   \                     ??UHF_900M_SETADDR_0: (+1)
   \   0000004A   0x4630             MOV      R0,R6
   \   0000004C   0x1E46             SUBS     R6,R0,#+1
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD004             BEQ.N    ??UHF_900M_SETADDR_2
   \   00000052   0x4620             MOV      R0,R4
   \   00000054   0x.... 0x....      BL       WaitUHFDataReceive
   \   00000058   0x2810             CMP      R0,#+16
   \   0000005A   0xD1F0             BNE.N    ??UHF_900M_SETADDR_1
    140          	}
    141          	return ret;
   \                     ??UHF_900M_SETADDR_2: (+1)
   \   0000005C   0x2010             MOVS     R0,#+16
   \   0000005E   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    142          }
    143          
    144          /**
    145            * @brief   900M重启命令
    146            * @param   pst_UHF_device
    147            * @retval  返回状态
    148           */

   \                                 In section .text, align 2, keep-with-next
    149          EN_UHF_STATUS UHF_900M_RESET(PST_UHF_Device pst_UHF_device, PST_DEVICE pst_device)
    150          {
   \                     UHF_900M_RESET: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
    151          	EN_UHF_STATUS ret = UHF_STATUS_SUCCESS;
    152          	u8 UHF_ADDR = 0xFF;
   \   00000008   0x20FF             MOVS     R0,#+255
   \   0000000A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    153          	pst_UHF_device->address = UHF_ADDR;					/* 首先设置读写地址 */	
   \   0000000E   0xF204 0x1625      ADDW     R6,R4,#+293
   \   00000012   0x7030             STRB     R0,[R6, #+0]
    154          	debug_printf("UHF900M Reset Start!!!\r\n");			/* debug printf */
   \   00000014   0x.... 0x....      ADR.W    R0,?_8
   \   00000018   0x.... 0x....      BL       debug_printf
    155          	pst_UHF_device->cmd = UHF_CMD_RESET;
   \   0000001C   0x2070             MOVS     R0,#+112
   \   0000001E   0x7070             STRB     R0,[R6, #+1]
    156          	UHF_Tx_PACK(pst_UHF_device, &UHF_ADDR, 0x00);		/* 发送数据包到UHF模块 */
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0xA900             ADD      R1,SP,#+0
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       UHF_Tx_PACK
    157          	OSTimeDlyHMSM(0, 0, 1, 0); 							/* 延迟等待1s模块重启完成 */
   \   0000002A   0x2300             MOVS     R3,#+0
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x4619             MOV      R1,R3
   \   00000030   0x4608             MOV      R0,R1
   \   00000032   0x.... 0x....      BL       OSTimeDlyHMSM
    158          	
    159          	debug_printf("UHF900M Reset Over!!!\r\n");			/* debug printf */
   \   00000036   0x.... 0x....      ADR.W    R0,?_9
   \   0000003A   0x.... 0x....      BL       debug_printf
    160          	pst_device->DeviceAct = EN_UHF_RESET;				/* 处理状态为重启 */
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x7068             STRB     R0,[R5, #+1]
    161          	return ret;
   \   00000042   0x2010             MOVS     R0,#+16
   \   00000044   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    162          }
    163          
    164          /**
    165            * @brief   900M设置天线号
    166            * @param   pst_UHF_device
    167            * @retval  设置天线结果
    168           */

   \                                 In section .text, align 2, keep-with-next
    169          EN_UHF_STATUS UHF_SET_ANTENNA(PST_UHF_Device pst_UHF_device, u8 antenna, PST_DEVICE pst_device)
    170          {
   \                     UHF_SET_ANTENNA: (+1)
   \   00000000   0xB573             PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x4615             MOV      R5,R2
    171          	EN_UHF_STATUS ret = UHF_STATUS_SUCCESS;
    172          	debug_printf("UHF900M SET ANTENNA Start!!!\r\n");			/* debug printf */
   \   00000006   0x.... 0x....      ADR.W    R0,?_10
   \   0000000A   0x.... 0x....      BL       debug_printf
    173          	pst_UHF_device->cmd = UHF_CMD_SET_WORK_ANTENNA;
   \   0000000E   0x2074             MOVS     R0,#+116
   \   00000010   0xF884 0x0126      STRB     R0,[R4, #+294]
    174          	u32 timecount = pst_UHF_device->Timeout;
   \   00000014   0xF8D4 0x612C      LDR      R6,[R4, #+300]
    175          	if(antenna > 3)
   \   00000018   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   0000001C   0x2804             CMP      R0,#+4
   \   0000001E   0xDB01             BLT.N    ??UHF_SET_ANTENNA_0
    176          		return UHF_STATUS_FAIL;
   \   00000020   0x2011             MOVS     R0,#+17
   \   00000022   0xBD76             POP      {R1,R2,R4-R6,PC}
    177          	UHF_Tx_PACK(pst_UHF_device, &antenna, 0x01);
   \                     ??UHF_SET_ANTENNA_0: (+1)
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0xA901             ADD      R1,SP,#+4
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       UHF_Tx_PACK
    178          	debug_printf("UHF900M SET ANTENNA Over!!!\r\n");		/* debug printf */
   \   0000002E   0x.... 0x....      ADR.W    R0,?_11
   \   00000032   0x.... 0x....      BL       debug_printf
    179          	pst_device->DeviceAct = EN_UHF_SETANTENNA;				/* 处理状态为设置天线 */
   \   00000036   0x2002             MOVS     R0,#+2
   \   00000038   0x7068             STRB     R0,[R5, #+1]
   \   0000003A   0xE002             B.N      ??UHF_SET_ANTENNA_1
    180          	while(timecount --)						/* 等待寻卡回应 6*800 = 4.8S */
    181          	{
    182          		WaitUHFDataReceive(pst_UHF_device);
   \                     ??UHF_SET_ANTENNA_2: (+1)
   \   0000003C   0x4620             MOV      R0,R4
   \   0000003E   0x.... 0x....      BL       WaitUHFDataReceive
    183          	}
   \                     ??UHF_SET_ANTENNA_1: (+1)
   \   00000042   0x4630             MOV      R0,R6
   \   00000044   0x1E46             SUBS     R6,R0,#+1
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD1F8             BNE.N    ??UHF_SET_ANTENNA_2
    184          	return ret;
   \   0000004A   0x2010             MOVS     R0,#+16
   \   0000004C   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    185          }
    186          
    187          /**
    188            * @brief   900M设置功率
    189            * @param   pst_UHF_device
    190            * @retval  设置天线结果
    191           */

   \                                 In section .text, align 2, keep-with-next
    192          EN_UHF_STATUS UHF_SET_POWER(PST_UHF_Device pst_UHF_device, u8 power_dbm, PST_DEVICE pst_device)
    193          {
   \                     UHF_SET_POWER: (+1)
   \   00000000   0xB573             PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x4615             MOV      R5,R2
    194          	EN_UHF_STATUS ret = UHF_STATUS_FAIL;
    195          	debug_printf("UHF900M SET POWER Start!!!\r\n");	/* debug printf */
   \   00000006   0x.... 0x....      ADR.W    R0,?_12
   \   0000000A   0x.... 0x....      BL       debug_printf
    196          	u32 timecount = pst_UHF_device->Timeout;
   \   0000000E   0xF8D4 0x612C      LDR      R6,[R4, #+300]
    197          	if(power_dbm> 33)
   \   00000012   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   00000016   0x2822             CMP      R0,#+34
   \   00000018   0xDB02             BLT.N    ??UHF_SET_POWER_0
    198          		power_dbm = 33;
   \   0000001A   0x2021             MOVS     R0,#+33
   \   0000001C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    199          	UHF_Tx_PACK(pst_UHF_device, &power_dbm, 0x01);
   \                     ??UHF_SET_POWER_0: (+1)
   \   00000020   0x2201             MOVS     R2,#+1
   \   00000022   0xA901             ADD      R1,SP,#+4
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       UHF_Tx_PACK
    200          	debug_printf("UHF900M SET POWER Over!!!\r\n");		/* debug printf */
   \   0000002A   0x.... 0x....      ADR.W    R0,?_13
   \   0000002E   0x.... 0x....      BL       debug_printf
   \   00000032   0xE002             B.N      ??UHF_SET_POWER_1
    201          	while(timecount --)						/* 等待寻卡回应 6*800 = 4.8S */
    202          	{
    203          		WaitUHFDataReceive(pst_UHF_device);
   \                     ??UHF_SET_POWER_2: (+1)
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0x.... 0x....      BL       WaitUHFDataReceive
    204          	}
   \                     ??UHF_SET_POWER_1: (+1)
   \   0000003A   0x4630             MOV      R0,R6
   \   0000003C   0x1E46             SUBS     R6,R0,#+1
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD1F8             BNE.N    ??UHF_SET_POWER_2
    205          	pst_device->DeviceAct = EN_UHF_SETPOWER;				/* 处理状态为功率设置 */
   \   00000042   0x2003             MOVS     R0,#+3
   \   00000044   0x7068             STRB     R0,[R5, #+1]
    206          	return ret;
   \   00000046   0x2011             MOVS     R0,#+17
   \   00000048   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    207          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x0A 0x00          DC8      "\n",0x0,0x0
   \              0x00 0x00    

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_2:
   \   00000000   0x0A 0x00          DC8 "\012"

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x6C 0x69          DC8 "list 900m card epc:"
   \              0x73 0x74    
   \              0x20 0x39    
   \              0x30 0x30    
   \              0x6D 0x20    
   \              0x63 0x61    
   \              0x72 0x64    
   \              0x20 0x65    
   \              0x70 0x63    
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x25 0x30          DC8 "%02X "
   \              0x32 0x58    
   \              0x20 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x77 0x72          DC8 "write 900m card block_data:"
   \              0x69 0x74    
   \              0x65 0x20    
   \              0x39 0x30    
   \              0x30 0x6D    
   \              0x20 0x63    
   \              0x61 0x72    
   \              0x64 0x20    
   \              0x62 0x6C    
   \              0x6F 0x63    
   \              0x6B 0x5F    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x55 0x48          DC8 "UHF 900M Init Over!!!\015\012"
   \              0x46 0x20    
   \              0x39 0x30    
   \              0x30 0x4D    
   \              0x20 0x49    
   \              0x6E 0x69    
   \              0x74 0x20    
   \              0x4F 0x76    
   \              0x65 0x72    
   \              0x21 0x21    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x55 0x48          DC8 "UHF900M Set Addr Start!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x53 0x65    
   \              0x74 0x20    
   \              0x41 0x64    
   \              0x64 0x72    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x72 0x74    
   \              0x21 0x21    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x55 0x48          DC8 "UHF900M Set Addr Over!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x53 0x65    
   \              0x74 0x20    
   \              0x41 0x64    
   \              0x64 0x72    
   \              0x20 0x4F    
   \              0x76 0x65    
   \              0x72 0x21    
   \              0x21 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x55 0x48          DC8 "UHF900M Reset Start!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x52 0x65    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x53 0x74    
   \              0x61 0x72    
   \              0x74 0x21    
   \              0x21 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x55 0x48          DC8 "UHF900M Reset Over!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x52 0x65    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x4F 0x76    
   \              0x65 0x72    
   \              0x21 0x21    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x55 0x48          DC8 "UHF900M SET ANTENNA Start!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x53 0x45    
   \              0x54 0x20    
   \              0x41 0x4E    
   \              0x54 0x45    
   \              0x4E 0x4E    
   \              0x41 0x20    
   \              0x53 0x74    
   \              0x61 0x72    
   \              0x74 0x21    
   \              0x21 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x55 0x48          DC8 "UHF900M SET ANTENNA Over!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x53 0x45    
   \              0x54 0x20    
   \              0x41 0x4E    
   \              0x54 0x45    
   \              0x4E 0x4E    
   \              0x41 0x20    
   \              0x4F 0x76    
   \              0x65 0x72    
   \              0x21 0x21    
   \              0x21 0x0D    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x55 0x48          DC8 "UHF900M SET POWER Start!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x53 0x45    
   \              0x54 0x20    
   \              0x50 0x4F    
   \              0x57 0x45    
   \              0x52 0x20    
   \              0x53 0x74    
   \              0x61 0x72    
   \              0x74 0x21    
   \              0x21 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x55 0x48          DC8 "UHF900M SET POWER Over!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x53 0x45    
   \              0x54 0x20    
   \              0x50 0x4F    
   \              0x57 0x45    
   \              0x52 0x20    
   \              0x4F 0x76    
   \              0x65 0x72    
   \              0x21 0x21    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    208          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   UHF_900M_Init
        16   -> OSTimeDlyHMSM
        16   -> UHF_900M_RESET
        16   -> UHF_900M_SETADDR
        16   -> UHF_SET_ANTENNA
        16   -> UHF_SET_POWER
        16   -> debug_printf
      24   UHF_900M_RESET
        24   -> OSTimeDlyHMSM
        24   -> UHF_Tx_PACK
        24   -> debug_printf
      24   UHF_900M_SETADDR
        24   -> OSTimeDlyHMSM
        24   -> UHF_Tx_PACK
        24   -> WaitUHFDataReceive
        24   -> debug_printf
      24   UHF_SET_ANTENNA
        24   -> UHF_Tx_PACK
        24   -> WaitUHFDataReceive
        24   -> debug_printf
      24   UHF_SET_POWER
        24   -> UHF_Tx_PACK
        24   -> WaitUHFDataReceive
        24   -> debug_printf
      16   _cmd_900m_list_card
        16   -> Beep_output_time
        16   -> GropPackNBMsgSend
        16   -> UhfWRdata_list
        16   -> __aeabi_memcpy
        16   -> debug_printf
      80   _cmd_900m_read_card
        80   -> GropPackNBMsgSend
        80   -> UhfWRdata_read
        80   -> __aeabi_memclr4
      16   _cmd_900m_write_card
        16   -> Beep_output_time
        16   -> GropPackNBMsgSend
        16   -> UhfSelect_TAG
        16   -> UhfWRdata_write
        16   -> debug_printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable14
      20  ?_0
       8  ?_1
      32  ?_10
      32  ?_11
      32  ?_12
      28  ?_13
       2  ?_2
      68  ?_3
      28  ?_4
      24  ?_5
      28  ?_6
      28  ?_7
      28  ?_8
      24  ?_9
      76  UHF_900M_Init
      70  UHF_900M_RESET
      96  UHF_900M_SETADDR
      78  UHF_SET_ANTENNA
      74  UHF_SET_POWER
     106  _cmd_900m_list_card
      48  _cmd_900m_read_card
      72  _cmd_900m_write_card

 
  70 bytes in section .rodata
 936 bytes in section .text
 
 936 bytes of CODE  memory
  70 bytes of CONST memory

Errors: none
Warnings: 1
