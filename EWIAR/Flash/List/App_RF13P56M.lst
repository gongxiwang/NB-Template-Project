###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        12/Jul/2019  09:14:38
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\App_RF13P56M.c
#    Command line =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\App_RF13P56M.c
#        -D LORA_MODULE -lCN
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\ -o
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\Softwares\IAR7.40\arm\INC\c\DLib_Config_Full.h -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\CPU\inc\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-LIB\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Ports\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Source\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\BSP\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\APP\
#        -Om --use_c++_inline
#    List file    =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\App_RF13P56M.lst
#    Object file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\App_RF13P56M.o
#
###############################################################################

E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\App_RF13P56M.c
      1          /** @copyright XunFang Communication Tech Limited. All rights reserved. 2013.
      2            * @file  App_RF13P56M.c
      3            * @author  www.xunfang.com
      4            * @version  V1.0.0
      5            * @date  08/01/2016
      6            * @brief  RFID13.56M
      7            */ 
      8          #define App_BSP_int_MODULE
      9          
     10          
     11          
     12          #include "bsp_13p56m.h"
     13          #include "App_RF13P56M.h"
     14          #include "app_uart.h"
     15          #include "App_Beep.h"
     16          #include "string.h"
     17          #include "app_device.h"
     18          #include "app_nbiot.h"
     19          

   \                                 In section .bss, align 1
     20          static u8 is_operate_state = 0;
   \                     is_operate_state:
   \   00000000                      DS8 1
     21          /**
     22            * @brief   13.56M寻标签
     23            * @param   packet 数据包
     24            * @retval  寻标签结果
     25           */

   \                                 In section .text, align 2, keep-with-next
     26          int _cmd_13p56m_list_card(Device_packet_t *packet)
     27          {
   \                     _cmd_13p56m_list_card: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
     28              u8 card_uid[4] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x6001             STR      R1,[R0, #+0]
     29              if(is_operate_state)
   \   0000000A   0x....             LDR.N    R5,??DataTable9
   \   0000000C   0x7828             LDRB     R0,[R5, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD001             BEQ.N    ??_cmd_13p56m_list_card_0
     30          		return 0;
   \   00000012   0x4608             MOV      R0,R1
   \   00000014   0xBD32             POP      {R1,R4,R5,PC}
     31          	is_operate_state = 1;
   \                     ??_cmd_13p56m_list_card_0: (+1)
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x7028             STRB     R0,[R5, #+0]
     32              if(!PN532_InListPassiveTarget(card_uid))
   \   0000001A   0xA800             ADD      R0,SP,#+0
   \   0000001C   0x.... 0x....      BL       PN532_InListPassiveTarget
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD115             BNE.N    ??_cmd_13p56m_list_card_1
     33              {
     34                  packet->ack = ACK_OK;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x71E0             STRB     R0,[R4, #+7]
     35                  packet->data_size = 4;
   \   00000028   0x2004             MOVS     R0,#+4
   \   0000002A   0x7220             STRB     R0,[R4, #+8]
     36                  memcpy(packet->data, card_uid, 4);
   \   0000002C   0x4602             MOV      R2,R0
   \   0000002E   0xA900             ADD      R1,SP,#+0
   \   00000030   0xF104 0x0009      ADD      R0,R4,#+9
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy
     37                  debug_printf("list 13.56m card uid:");
   \   00000038   0x.... 0x....      ADR.W    R0,?_1
   \   0000003C   0x.... 0x....      BL       debug_printf
     38                  debug_print_buffer(card_uid,4);  
   \   00000040   0x2104             MOVS     R1,#+4
   \   00000042   0xA800             ADD      R0,SP,#+0
   \   00000044   0x.... 0x....      BL       debug_print_buffer
     39                  Beep_output_time(30);
   \   00000048   0x201E             MOVS     R0,#+30
   \   0000004A   0x.... 0x....      BL       Beep_output_time
   \   0000004E   0xE003             B.N      ??_cmd_13p56m_list_card_2
     40              }
     41              else
     42              {
     43                  packet->ack = ACK_CARD_HANDLE_ERR;
   \                     ??_cmd_13p56m_list_card_1: (+1)
   \   00000050   0x2008             MOVS     R0,#+8
   \   00000052   0x71E0             STRB     R0,[R4, #+7]
     44                  packet->data_size = 0;
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x7220             STRB     R0,[R4, #+8]
     45              }
     46          	is_operate_state = 0;
   \                     ??_cmd_13p56m_list_card_2: (+1)
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x7028             STRB     R0,[R5, #+0]
     47          	GropPackNBMsgSend(packet->data, packet->data_size, 0x00);	
   \   0000005C   0x4602             MOV      R2,R0
   \   0000005E   0x7A21             LDRB     R1,[R4, #+8]
   \   00000060   0xF104 0x0009      ADD      R0,R4,#+9
   \   00000064   0x.... 0x....      BL       GropPackNBMsgSend
     48          	return 0;
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     49          }
     50          
     51          
     52          /**
     53            * @brief   13.56M读标签
     54            * @param   packet 数据包
     55            * @retval  寻标签结果
     56           */

   \                                 In section .text, align 2, keep-with-next
     57          int _cmd_13p56m_read_card(Device_packet_t *packet)
     58          {
   \                     _cmd_13p56m_read_card: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x4604             MOV      R4,R0
     59              u8 card_uid[4] = {0};
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x6001             STR      R1,[R0, #+0]
     60              u8 block_data[16] = {0};
   \   0000000C   0xA801             ADD      R0,SP,#+4
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
     61              if(is_operate_state)
   \   00000014   0x....             LDR.N    R5,??DataTable9
   \   00000016   0x7828             LDRB     R0,[R5, #+0]
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD001             BEQ.N    ??_cmd_13p56m_read_card_0
     62                  return 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE039             B.N      ??_cmd_13p56m_read_card_1
     63              is_operate_state = 1;
   \                     ??_cmd_13p56m_read_card_0: (+1)
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x7028             STRB     R0,[R5, #+0]
     64              if(!PN532_InListPassiveTarget(card_uid))/*寻卡*/
   \   00000024   0xA800             ADD      R0,SP,#+0
   \   00000026   0x.... 0x....      BL       PN532_InListPassiveTarget
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD125             BNE.N    ??_cmd_13p56m_read_card_2
     65              {
     66                  if(!PN532_PsdVerifyKeyA(packet->data[0],card_uid))/*验证密钥*/
   \   0000002E   0xA900             ADD      R1,SP,#+0
   \   00000030   0x7A60             LDRB     R0,[R4, #+9]
   \   00000032   0x.... 0x....      BL       PN532_PsdVerifyKeyA
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD11F             BNE.N    ??_cmd_13p56m_read_card_2
     67                  {
     68                      if(!PN532_read(packet->data[0],block_data))/*读卡*/
   \   0000003A   0xA901             ADD      R1,SP,#+4
   \   0000003C   0x7A60             LDRB     R0,[R4, #+9]
   \   0000003E   0x.... 0x....      BL       PN532_read
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD119             BNE.N    ??_cmd_13p56m_read_card_2
     69                      {
     70                          packet->ack = ACK_OK;
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x71E0             STRB     R0,[R4, #+7]
     71                          packet->data_size = 16;
   \   0000004A   0x2010             MOVS     R0,#+16
   \   0000004C   0x7220             STRB     R0,[R4, #+8]
     72                          memcpy(packet->data,block_data,16);
   \   0000004E   0x4602             MOV      R2,R0
   \   00000050   0xA901             ADD      R1,SP,#+4
   \   00000052   0xF104 0x0009      ADD      R0,R4,#+9
   \   00000056   0x.... 0x....      BL       __aeabi_memcpy
     73                          debug_printf("read 13.56m card uid and block_data:");
   \   0000005A   0x.... 0x....      ADR.W    R0,?_4
   \   0000005E   0x.... 0x....      BL       debug_printf
     74                          debug_print_buffer(card_uid,4);
   \   00000062   0x2104             MOVS     R1,#+4
   \   00000064   0xA800             ADD      R0,SP,#+0
   \   00000066   0x.... 0x....      BL       debug_print_buffer
     75                          debug_print_buffer(block_data,16);
   \   0000006A   0x2110             MOVS     R1,#+16
   \   0000006C   0xA801             ADD      R0,SP,#+4
   \   0000006E   0x.... 0x....      BL       debug_print_buffer
     76                          Beep_output_time(30);           
   \   00000072   0x201E             MOVS     R0,#+30
   \   00000074   0x.... 0x....      BL       Beep_output_time
   \   00000078   0xE003             B.N      ??_cmd_13p56m_read_card_3
     77                      }
     78                      else
     79                      {
     80                          packet->ack = ACK_CARD_HANDLE_ERR;
     81                          packet->data_size = 0;
     82                      }
     83                  }
     84                  else
     85                  {
     86                      packet->ack = ACK_CARD_HANDLE_ERR;
     87                      packet->data_size = 0;
     88                  }
     89              }
     90              else
     91              {
     92                  packet->ack = ACK_CARD_HANDLE_ERR;
   \                     ??_cmd_13p56m_read_card_2: (+1)
   \   0000007A   0x2008             MOVS     R0,#+8
   \   0000007C   0x71E0             STRB     R0,[R4, #+7]
     93                  packet->data_size = 0;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x7220             STRB     R0,[R4, #+8]
     94              }    
     95              is_operate_state = 0;
   \                     ??_cmd_13p56m_read_card_3: (+1)
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x7028             STRB     R0,[R5, #+0]
     96          	GropPackNBMsgSend(packet->data, packet->data_size, 0x00);
   \   00000086   0x4602             MOV      R2,R0
   \   00000088   0x7A21             LDRB     R1,[R4, #+8]
   \   0000008A   0xF104 0x0009      ADD      R0,R4,#+9
   \   0000008E   0x.... 0x....      BL       GropPackNBMsgSend
     97              return 0;
   \   00000092   0x2000             MOVS     R0,#+0
   \                     ??_cmd_13p56m_read_card_1: (+1)
   \   00000094   0xB005             ADD      SP,SP,#+20
   \   00000096   0xBD30             POP      {R4,R5,PC}       ;; return
     98          }
     99          
    100          
    101          /**
    102            * @brief   13.56M写标签
    103            * @param   packet 数据包
    104            * @retval  寻标签结果
    105           */

   \                                 In section .text, align 2, keep-with-next
    106          int _cmd_13p56m_write_card(Device_packet_t *packet)
    107          {
   \                     _cmd_13p56m_write_card: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
    108              u8 card_uid[4] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x6001             STR      R1,[R0, #+0]
    109              if(is_operate_state)
   \   0000000A   0x....             LDR.N    R5,??DataTable9
   \   0000000C   0x7828             LDRB     R0,[R5, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD001             BEQ.N    ??_cmd_13p56m_write_card_0
    110                  return 0;
   \   00000012   0x4608             MOV      R0,R1
   \   00000014   0xBD32             POP      {R1,R4,R5,PC}
    111              is_operate_state = 1;
   \                     ??_cmd_13p56m_write_card_0: (+1)
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x7028             STRB     R0,[R5, #+0]
    112              if(!PN532_InListPassiveTarget(card_uid))/*寻卡*/
   \   0000001A   0xA800             ADD      R0,SP,#+0
   \   0000001C   0x.... 0x....      BL       PN532_InListPassiveTarget
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD120             BNE.N    ??_cmd_13p56m_write_card_1
    113              {
    114                  if(!PN532_PsdVerifyKeyA(packet->data[0],card_uid))/*验证密钥*/
   \   00000024   0xA900             ADD      R1,SP,#+0
   \   00000026   0x7A60             LDRB     R0,[R4, #+9]
   \   00000028   0x.... 0x....      BL       PN532_PsdVerifyKeyA
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD11A             BNE.N    ??_cmd_13p56m_write_card_1
    115                  {
    116                      if(!PN532_write(packet->data[0],&packet->data[1]))/*写卡*/
   \   00000030   0xF104 0x010A      ADD      R1,R4,#+10
   \   00000034   0x7A60             LDRB     R0,[R4, #+9]
   \   00000036   0x.... 0x....      BL       PN532_write
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD113             BNE.N    ??_cmd_13p56m_write_card_1
    117                      {
    118                          packet->ack = ACK_OK;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x71E0             STRB     R0,[R4, #+7]
    119                          packet->data_size = 0;
   \   00000042   0x7220             STRB     R0,[R4, #+8]
    120                          debug_printf("write 13.56m card uid and block_data:");
   \   00000044   0x.... 0x....      ADR.W    R0,?_6
   \   00000048   0x.... 0x....      BL       debug_printf
    121                          debug_print_buffer(card_uid,4);
   \   0000004C   0x2104             MOVS     R1,#+4
   \   0000004E   0xA800             ADD      R0,SP,#+0
   \   00000050   0x.... 0x....      BL       debug_print_buffer
    122                          debug_print_buffer(&packet->data[1],16);
   \   00000054   0x2110             MOVS     R1,#+16
   \   00000056   0xF104 0x000A      ADD      R0,R4,#+10
   \   0000005A   0x.... 0x....      BL       debug_print_buffer
    123                          Beep_output_time(30);
   \   0000005E   0x201E             MOVS     R0,#+30
   \   00000060   0x.... 0x....      BL       Beep_output_time
   \   00000064   0xE003             B.N      ??_cmd_13p56m_write_card_2
    124                      }
    125                      else
    126                      {
    127                          packet->ack = ACK_CARD_HANDLE_ERR;
    128                          packet->data_size = 0;
    129                      }
    130                  }
    131                  else
    132                  {
    133                      packet->ack = ACK_CARD_HANDLE_ERR;
    134                      packet->data_size = 0;
    135                  }
    136              }
    137              else
    138              {
    139                  packet->ack = ACK_CARD_HANDLE_ERR;
   \                     ??_cmd_13p56m_write_card_1: (+1)
   \   00000066   0x2008             MOVS     R0,#+8
   \   00000068   0x71E0             STRB     R0,[R4, #+7]
    140                  packet->data_size = 0;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x7220             STRB     R0,[R4, #+8]
    141              }     
    142              is_operate_state = 0;
   \                     ??_cmd_13p56m_write_card_2: (+1)
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x7028             STRB     R0,[R5, #+0]
    143          	GropPackNBMsgSend(packet->data, packet->data_size, 0x00);
   \   00000072   0x4602             MOV      R2,R0
   \   00000074   0x7A21             LDRB     R1,[R4, #+8]
   \   00000076   0xF104 0x0009      ADD      R0,R4,#+9
   \   0000007A   0x.... 0x....      BL       GropPackNBMsgSend
    144              return 0;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    145          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     is_operate_state

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x6C 0x69          DC8 "list 13.56m card uid:"
   \              0x73 0x74    
   \              0x20 0x31    
   \              0x33 0x2E    
   \              0x35 0x36    
   \              0x6D 0x20    
   \              0x63 0x61    
   \              0x72 0x64    
   \              0x20 0x75    
   \              0x69 0x64    
   \              0x3A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x72 0x65          DC8 "read 13.56m card uid and block_data:"
   \              0x61 0x64    
   \              0x20 0x31    
   \              0x33 0x2E    
   \              0x35 0x36    
   \              0x6D 0x20    
   \              0x63 0x61    
   \              0x72 0x64    
   \              0x20 0x75    
   \              0x69 0x64    
   \              0x20 0x61    
   \              0x6E 0x64    
   \              0x20 0x62    
   \              0x6C 0x6F    
   \              0x63 0x6B    
   \              0x5F 0x64    
   \              0x61 0x74    
   \              0x61 0x3A    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x77 0x72          DC8 "write 13.56m card uid and block_data:"
   \              0x69 0x74    
   \              0x65 0x20    
   \              0x31 0x33    
   \              0x2E 0x35    
   \              0x36 0x6D    
   \              0x20 0x63    
   \              0x61 0x72    
   \              0x64 0x20    
   \              0x75 0x69    
   \              0x64 0x20    
   \              0x61 0x6E    
   \              0x64 0x20    
   \              0x62 0x6C    
   \              0x6F 0x63    
   \              0x6B 0x5F    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x3A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
    146          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   _cmd_13p56m_list_card
        16   -> Beep_output_time
        16   -> GropPackNBMsgSend
        16   -> PN532_InListPassiveTarget
        16   -> __aeabi_memcpy
        16   -> debug_print_buffer
        16   -> debug_printf
      32   _cmd_13p56m_read_card
        32   -> Beep_output_time
        32   -> GropPackNBMsgSend
        32   -> PN532_InListPassiveTarget
        32   -> PN532_PsdVerifyKeyA
        32   -> PN532_read
        32   -> __aeabi_memclr4
        32   -> __aeabi_memcpy
        32   -> debug_print_buffer
        32   -> debug_printf
      16   _cmd_13p56m_write_card
        16   -> Beep_output_time
        16   -> GropPackNBMsgSend
        16   -> PN532_InListPassiveTarget
        16   -> PN532_PsdVerifyKeyA
        16   -> PN532_write
        16   -> debug_print_buffer
        16   -> debug_printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ?_0
      24  ?_1
       4  ?_2
      16  ?_3
      40  ?_4
       4  ?_5
      40  ?_6
     108  _cmd_13p56m_list_card
     152  _cmd_13p56m_read_card
     130  _cmd_13p56m_write_card
       1  is_operate_state

 
   1 byte  in section .bss
  28 bytes in section .rodata
 498 bytes in section .text
 
 498 bytes of CODE  memory
  28 bytes of CONST memory
   1 byte  of DATA  memory

Errors: none
Warnings: none
