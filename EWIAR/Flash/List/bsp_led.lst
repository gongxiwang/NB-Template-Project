###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        12/Jul/2019  09:14:39
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\BSP\bsp_led.c
#    Command line =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\BSP\bsp_led.c -D
#        LORA_MODULE -lCN
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\ -o
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\Softwares\IAR7.40\arm\INC\c\DLib_Config_Full.h -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\CPU\inc\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-LIB\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Ports\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Source\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\BSP\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\APP\
#        -Om --use_c++_inline
#    List file    =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\bsp_led.lst
#    Object file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\bsp_led.o
#
###############################################################################

E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\BSP\bsp_led.c
      1          /** @copyright XunFang Communication Tech Limited. All rights reserved. 2013.
      2            * @file  app_led.c
      3            * @author walle
      4            * @version  V2.0.0
      5            * @date  08/01/2019
      6            * @brief  用户LED灯接口
      7            */ 
      8          
      9          #include "bsp_led.h"
     10          #include "bsp.h"
     11          
     12          
     13          /**
     14            * @brief LED灯控制函数控制哪个灯点亮
     15            * @param index LED灯的序号
     16            * @param on 1:点亮0:熄灭
     17           */
     18          

   \                                 In section .text, align 2, keep-with-next
     19          void  BSP_LED_Init (void)
     20          {
   \                     BSP_LED_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     21              GPIO_InitTypeDef  gpio_init;
     22              gpio_init.GPIO_Pin   = GPIO_Pin_0;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     23              gpio_init.GPIO_Speed = GPIO_Speed_50MHz;
   \   00000008   0x2003             MOVS     R0,#+3
   \   0000000A   0xF88D 0x0002      STRB     R0,[SP, #+2]
     24              gpio_init.GPIO_Mode  = GPIO_Mode_Out_PP;
   \   0000000E   0x2010             MOVS     R0,#+16
   \   00000010   0xF88D 0x0003      STRB     R0,[SP, #+3]
     25              GPIO_Init(GPIOB, &gpio_init);
   \   00000014   0xA900             ADD      R1,SP,#+0
   \   00000016   0x....             LDR.N    R0,??DataTable1  ;; 0x40010c00
   \   00000018   0x.... 0x....      BL       GPIO_Init
     26          }
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
     27          
     28          /**
     29            * @brief LED灯控制函数控制哪个灯点亮
     30            * @param index LED灯的序号
     31            * @param on 1:点亮0:熄灭
     32           */

   \                                 In section .text, align 2, keep-with-next
     33          void Light_control(int index, int on)
     34          {
     35          	switch(index)
   \                     Light_control: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD003             BEQ.N    ??Light_control_0
   \   00000004   0x2802             CMP      R0,#+2
   \   00000006   0xD013             BEQ.N    ??Light_control_1
   \   00000008   0xD309             BCC.N    ??Light_control_2
   \   0000000A   0x4770             BX       LR
     36          	{
     37          		case 0:
     38          		GPIO_WriteBit(LED_BLUE_GPIOx, LED_BLUE_PINx, (on ? Bit_SET : Bit_RESET));
   \                     ??Light_control_0: (+1)
   \   0000000C   0x460A             MOV      R2,R1
   \   0000000E   0x1E52             SUBS     R2,R2,#+1
   \   00000010   0x4192             SBCS     R2,R2,R2
   \   00000012   0x43D2             MVNS     R2,R2
   \   00000014   0x0FD2             LSRS     R2,R2,#+31
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0x....             LDR.N    R0,??DataTable1  ;; 0x40010c00
   \   0000001A   0x.... 0x....      B.W      GPIO_WriteBit
     39          		break;
     40          		case 1:
     41          		GPIO_WriteBit(LED_RED_GPIOx, LED_RED_PINx, (on ? Bit_SET : Bit_RESET));
   \                     ??Light_control_2: (+1)
   \   0000001E   0x460A             MOV      R2,R1
   \   00000020   0x1E52             SUBS     R2,R2,#+1
   \   00000022   0x4192             SBCS     R2,R2,R2
   \   00000024   0x43D2             MVNS     R2,R2
   \   00000026   0x0FD2             LSRS     R2,R2,#+31
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x....             LDR.N    R0,??DataTable1  ;; 0x40010c00
   \   0000002C   0x.... 0x....      B.W      GPIO_WriteBit
     42          		break;
     43          		case 2:
     44          		GPIO_WriteBit(LED_RED_GPIOx, LED_RED_PINx, (on ? Bit_SET : Bit_RESET));
   \                     ??Light_control_1: (+1)
   \   00000030   0x460A             MOV      R2,R1
   \   00000032   0x1E52             SUBS     R2,R2,#+1
   \   00000034   0x4192             SBCS     R2,R2,R2
   \   00000036   0x43D2             MVNS     R2,R2
   \   00000038   0x0FD2             LSRS     R2,R2,#+31
   \   0000003A   0x2101             MOVS     R1,#+1
   \   0000003C   0x....             LDR.N    R0,??DataTable1  ;; 0x40010c00
   \   0000003E   0x.... 0x....      B.W      GPIO_WriteBit
     45          		break;
     46          		default:
     47          		assert_param(0);
     48          	}
     49          }
     50          
     51          /**
     52            * @brief 所有的灯全部关闭
     53            * @param NULL 无
     54            * @retval NULL 无
     55           */

   \                                 In section .text, align 2, keep-with-next
     56          void Light_all_off(void)
     57          {
   \                     Light_all_off: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     58          	int index;
     59          	for(index = 0; index < LIGHT_NUMBER; ++index)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE004             B.N      ??Light_all_off_0
     60          	{
     61          		Light_control(index, EN_LED_OFF);
   \                     ??Light_all_off_1: (+1)
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x4620             MOV      R0,R4
   \   0000000A   0x.... 0x....      BL       Light_control
     62          	}
   \   0000000E   0x1C64             ADDS     R4,R4,#+1
   \                     ??Light_all_off_0: (+1)
   \   00000010   0x2C03             CMP      R4,#+3
   \   00000012   0xDBF8             BLT.N    ??Light_all_off_1
     63          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
     64          
     65          /**
     66            * @brief 点亮所有的灯
     67            * @param NULL 无
     68            * @retval NULL 无
     69           */

   \                                 In section .text, align 2, keep-with-next
     70          void Light_all_on(void)
     71          {
   \                     Light_all_on: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     72          	int index;
     73          	for(index = 0; index < LIGHT_NUMBER; ++index)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE004             B.N      ??Light_all_on_0
     74          	{
     75          		Light_control(index, EN_LED_ON);
   \                     ??Light_all_on_1: (+1)
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x4620             MOV      R0,R4
   \   0000000A   0x.... 0x....      BL       Light_control
     76          	}
   \   0000000E   0x1C64             ADDS     R4,R4,#+1
   \                     ??Light_all_on_0: (+1)
   \   00000010   0x2C03             CMP      R4,#+3
   \   00000012   0xDBF8             BLT.N    ??Light_all_on_1
     77          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40010C00         DC32     0x40010c00
     78          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BSP_LED_Init
         8   -> GPIO_Init
       8   Light_all_off
         8   -> Light_control
       8   Light_all_on
         8   -> Light_control
       0   Light_control
         0   -> GPIO_WriteBit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      30  BSP_LED_Init
      22  Light_all_off
      22  Light_all_on
      66  Light_control

 
 144 bytes in section .text
 
 144 bytes of CODE memory

Errors: none
Warnings: none
