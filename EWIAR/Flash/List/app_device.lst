###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        12/Jul/2019  09:14:38
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app_device.c
#    Command line =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app_device.c
#        -D LORA_MODULE -lCN
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\ -o
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\Softwares\IAR7.40\arm\INC\c\DLib_Config_Full.h -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\CPU\inc\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-CPU\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-LIB\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Ports\
#        -I
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\UCOS-II\uC-OSII\Source\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\BSP\
#        -I E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\..\USER\APP\
#        -Om --use_c++_inline
#    List file    =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\List\app_device.lst
#    Object file  =  
#        E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\EWIAR\Flash\Obj\app_device.o
#
###############################################################################

E:\MYWorkPlace\SVNData\zhouwanli\XF-SXT-N-V1.0\USER\APP\app_device.c
      1          /** Copyright(c) 2015, XunFang Tech Limited. All rights reserved.
      2            * @file		app_device.c
      3            * @author		walle
      4            * @version	V1.0.0
      5            * @date		31/5/2019
      6            * @brief		传感器接口函数
      7            */
      8          
      9          #include "bsp.h"
     10          #include "app_adc.h"
     11          #include "app_uart.h"
     12          #include "bsp_uart.h"
     13          #include "app_modbus.h"
     14          #include "app_device.h"
     15          #include "app_nbiot.h"
     16          #include "stdio.h"
     17          #include <stdarg.h>
     18          #include "bsp.h"
     19          #include "bsp_dma.h"
     20          #include "app_device.h"
     21          #include "App_RF900M.h"
     22          #include "App_RF13P56M.h"
     23          #include "app_watmet.h"
     24          #include "app_CO2.h"
     25          #include "app_templg.h"
     26          
     27          #define SCANGUNDATASIZE 	0x06						/* 扫码枪的数据长度 */
     28          #define WATMETDATASIZE 		0x08						/* 水表数据长度 */
     29          #define ICREADERSIZE		0x0B						/* 13.56M--ICreader数据长度     */
     30          
     31          /**
     32            * @brief  Device结构体:
     33           */

   \                                 In section .bss, align 4
     34          static ST_DEVICE en_device = {0};  						/* 传感器设备 */
   \                     en_device:
   \   00000000                      DS8 4
   \   00000004                      DS8 4
   \   00000008                      DS8 4
   \   0000000C                      DS8 304
   \   0000013C                      DS8 152
   \   000001D4                      DS8 8
     35          /**
     36            * @brief  ST_UHF900_Device 
     37           */
     38          static ST_UHF_Device st_UHF_device = {0};
     39          extern ST_PACK_DATA   g_stRecvData;
     40          
     41          /**
     42            * @brief  缓冲区内存块个数 
     43           */
     44          #define Device_memory_blk_number 2
     45          
     46          
     47          /**
     48            * @brief  队列长度 
     49           */
     50          #define queue_number Device_memory_blk_number
     51          
     52          /**
     53            * @brief  申请内存作为缓冲区 
     54           */
     55          static Device_packet_t DEVICE_MEMORY[Device_memory_blk_number];
     56          
     57          /**
     58            * @brief  队列内存指针 
     59           */
     60          static Device_packet_t *pqueue_storge[queue_number];
     61          /**
     62            * @brief  队列头 
     63           */
     64          static OS_EVENT *Device_queue = 0;
     65          /**
     66            * @brief  内存块头 
     67           */
     68          static OS_MEM *Device_mem = 0;
     69          
     70          /**
     71            * @brief  每个内存块的大小 
     72           */
     73          #define Device_memory_blk_size sizeof(Device_packet_t)
     74          
     75          
     76          /**
     77            * @brief App_DEVICE_TASK
     78            * @details 设备处理任务
     79            * @param void *p_data
     80            * @retval NULL
     81           */

   \                                 In section .text, align 2, keep-with-next
     82          void App_DEVICE_TASK(void *p_data) 
     83          {
   \                     App_DEVICE_TASK: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
     84          	u8 err;														
     85          	Device_queue = OSQCreate((void *)pqueue_storge, queue_number);
   \   00000004   0x....             LDR.N    R4,??DataTable11
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0xF504 0x70EA      ADD      R0,R4,#+468
   \   0000000C   0x.... 0x....      BL       OSQCreate
   \   00000010   0x6060             STR      R0,[R4, #+4]
     86          	assert_param(Device_queue);						/* 检查队列合法性 */
     87          	Device_mem = OSMemCreate(DEVICE_MEMORY, Device_memory_blk_number, Device_memory_blk_size, &err);
   \   00000012   0xAB00             ADD      R3,SP,#+0
   \   00000014   0x224C             MOVS     R2,#+76
   \   00000016   0x2102             MOVS     R1,#+2
   \   00000018   0xF504 0x709E      ADD      R0,R4,#+316
   \   0000001C   0x.... 0x....      BL       OSMemCreate
   \   00000020   0x60A0             STR      R0,[R4, #+8]
     88          	debug_printf( "[%s] enter.\r\n", __func__ );	/* debug */
   \   00000022   0x.... 0x....      ADR.W    R1,??__func__
   \   00000026   0x.... 0x....      ADR.W    R0,?_0
   \   0000002A   0x.... 0x....      BL       debug_printf
     89          	while(1)
     90          	{
     91          		DoDevCtl(&en_device);						/* 传感器数据处理 */
   \                     ??App_DEVICE_TASK_0: (+1)
   \   0000002E   0x4620             MOV      R0,R4
   \   00000030   0x.... 0x....      BL       DoDevCtl
     92          		DevActionProc(&en_device);
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0x.... 0x....      BL       DevActionProc
     93          		OSTimeDlyHMSM(0, 0, 0, 1); 					/* 切换任务 */		
   \   0000003A   0x2301             MOVS     R3,#+1
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x4611             MOV      R1,R2
   \   00000040   0x4608             MOV      R0,R1
   \   00000042   0x.... 0x....      BL       OSTimeDlyHMSM
   \   00000046   0xE7F2             B.N      ??App_DEVICE_TASK_0
     94          	}	
     95          }
     96          
     97          /**
     98            * @brief 执行控制数据处理--单纯接收、控制电机、灯等
     99            * @details 无
    100            * @param CtlData
    101            * @retval 无
    102           */

   \                                 In section .text, align 2, keep-with-next
    103          void DoDevCtl(PST_DEVICE pst_dev)
    104          {
   \                     DoDevCtl: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    105          	u8 err;
    106          	u8 buffer_trash[200] = {0};
    107          	Device_packet_t *packet = OSQPend(Device_queue, 100, &err);	/* 从数据队列中接收数据 */
   \   00000004   0x....             LDR.N    R4,??DataTable11
   \   00000006   0xAA00             ADD      R2,SP,#+0
   \   00000008   0x2164             MOVS     R1,#+100
   \   0000000A   0x6860             LDR      R0,[R4, #+4]
   \   0000000C   0x.... 0x....      BL       OSQPend
   \   00000010   0x4605             MOV      R5,R0
    108          	if(DEVICE_SENSOR_SCANGUN == packet->Device_type)			/* 判断什么设备---扫码枪 */
   \   00000012   0x7968             LDRB     R0,[R5, #+5]
   \   00000014   0x281E             CMP      R0,#+30
   \   00000016   0xD11D             BNE.N    ??DoDevCtl_0
    109          	{
    110          		/* 485测试 */
    111          		OPENRS_485;
   \   00000018   0x....             LDR.N    R6,??DataTable11_1  ;; 0x40010c00
   \   0000001A   0x2140             MOVS     R1,#+64
   \   0000001C   0x4630             MOV      R0,R6
   \   0000001E   0x.... 0x....      BL       GPIO_SetBits
   \   00000022   0x2120             MOVS     R1,#+32
   \   00000024   0x4630             MOV      R0,R6
   \   00000026   0x.... 0x....      BL       GPIO_ResetBits
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       SetUSART_MODE
    112          		ENRS485_RX; 											/* 使能RS485接收 */
   \   00000030   0xF44F 0x7180      MOV      R1,#+256
   \   00000034   0x....             LDR.N    R0,??DataTable11_2  ;; 0x40010800
   \   00000036   0x.... 0x....      BL       GPIO_ResetBits
    113          		OSTimeDlyHMSM(0, 0, 0, 10); 							/* 使能接收后需要延迟10ms */
   \   0000003A   0x230A             MOVS     R3,#+10
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x4611             MOV      R1,R2
   \   00000040   0x4608             MOV      R0,R1
   \   00000042   0x.... 0x....      BL       OSTimeDlyHMSM
    114          		en_device.DeviceNum = DEVICE_SENSOR_SCANGUN;
   \   00000046   0x201E             MOVS     R0,#+30
   \   00000048   0x7020             STRB     R0,[R4, #+0]
    115          		debug_printf("Scan Gun online!\r\n");
   \   0000004A   0x.... 0x....      ADR.W    R0,?_1
   \   0000004E   0x.... 0x....      BL       debug_printf
   \   00000052   0xE081             B.N      ??DoDevCtl_1
    116          	}
    117          	
    118          	else if(DEVICE_SENSOR_WATMET == packet->Device_type)		/* 水表设备 */
   \                     ??DoDevCtl_0: (+1)
   \   00000054   0x281A             CMP      R0,#+26
   \   00000056   0xD10A             BNE.N    ??DoDevCtl_2
    119          	{
    120          		Watmet_Init();											/* 初始化水表 */
   \   00000058   0x.... 0x....      BL       Watmet_Init
    121          		Watmet_Read();											/* 查询用水量 */
   \   0000005C   0x.... 0x....      BL       Watmet_Read
    122          		en_device.DeviceNum = DEVICE_SENSOR_WATMET;
   \   00000060   0x201A             MOVS     R0,#+26
   \   00000062   0x7020             STRB     R0,[R4, #+0]
    123          		debug_printf("Water meter online!\r\n");
   \   00000064   0x.... 0x....      ADR.W    R0,?_2
   \   00000068   0x.... 0x....      BL       debug_printf
   \   0000006C   0xE074             B.N      ??DoDevCtl_1
    124          	}
    125          	
    126          #if 0	
    127          	else if(DEVICE_RFID_IC_READER == packet->Device_type)		/* IC卡读写器---暂时不用 */
    128          	{
    129          		en_device.DeviceNum = DEVICE_RFID_IC_READER;			/* 设备编号为IC卡读写器 */
    130          		debug_printf("IC Reader online!\r\n");
    131          	}
    132          #endif
    133          
    134          	else if(DEVICE_RFID_900M == packet->Device_type)			/* 900M设备 */
   \                     ??DoDevCtl_2: (+1)
   \   0000006E   0x2852             CMP      R0,#+82
   \   00000070   0xD149             BNE.N    ??DoDevCtl_3
    135          	{
    136          		OPENRS_232; 											/* 打开RS232 */
   \   00000072   0x....             LDR.N    R6,??DataTable11_1  ;; 0x40010c00
   \   00000074   0x2140             MOVS     R1,#+64
   \   00000076   0x4630             MOV      R0,R6
   \   00000078   0x.... 0x....      BL       GPIO_ResetBits
   \   0000007C   0x2120             MOVS     R1,#+32
   \   0000007E   0x4630             MOV      R0,R6
   \   00000080   0x.... 0x....      BL       GPIO_SetBits
   \   00000084   0x2001             MOVS     R0,#+1
   \   00000086   0x.... 0x....      BL       SetUSART_MODE
    137          		OSTimeDlyHMSM(0, 0, 0, 10);								/* 延迟10ms */ 	
   \   0000008A   0x230A             MOVS     R3,#+10
   \   0000008C   0x2200             MOVS     R2,#+0
   \   0000008E   0x4611             MOV      R1,R2
   \   00000090   0x4608             MOV      R0,R1
   \   00000092   0x.... 0x....      BL       OSTimeDlyHMSM
    138          		/* 使能接收后需要延迟10ms */	
    139          		UHF_900M_Init(&st_UHF_device, &en_device);				/* 900M初始化 */
   \   00000096   0x4621             MOV      R1,R4
   \   00000098   0xF104 0x000C      ADD      R0,R4,#+12
   \   0000009C   0x.... 0x....      BL       UHF_900M_Init
    140          		debug_printf("RFID 900M online!\r\n");
   \   000000A0   0x.... 0x....      ADR.W    R0,?_3
   \   000000A4   0x.... 0x....      BL       debug_printf
    141          		switch(packet->Command_code)							/* 判断900M命令 */
   \   000000A8   0x79A8             LDRB     R0,[R5, #+6]
   \   000000AA   0x2831             CMP      R0,#+49
   \   000000AC   0xD004             BEQ.N    ??DoDevCtl_4
   \   000000AE   0xD353             BCC.N    ??DoDevCtl_1
   \   000000B0   0x2833             CMP      R0,#+51
   \   000000B2   0xD01B             BEQ.N    ??DoDevCtl_5
   \   000000B4   0xD30D             BCC.N    ??DoDevCtl_6
   \   000000B6   0xE04F             B.N      ??DoDevCtl_1
    142          		{		
    143          			case SEARCH_CARD:/* 寻900m标签 */
    144          				debug_printf("UHF900M_CMD:SEARCH CARD!!!\r\n");
   \                     ??DoDevCtl_4: (+1)
   \   000000B8   0x.... 0x....      ADR.W    R0,?_4
   \   000000BC   0x.... 0x....      BL       debug_printf
    145          				_cmd_900m_list_card(packet, &st_UHF_device, &en_device);
   \   000000C0   0x4622             MOV      R2,R4
   \   000000C2   0xF104 0x010C      ADD      R1,R4,#+12
   \   000000C6   0x4628             MOV      R0,R5
   \   000000C8   0x.... 0x....      BL       _cmd_900m_list_card
    146          				en_device.DeviceAct = SEARCH_CARD;
   \   000000CC   0x2031             MOVS     R0,#+49
   \   000000CE   0x7060             STRB     R0,[R4, #+1]
    147          				break;
   \   000000D0   0xE042             B.N      ??DoDevCtl_1
    148          			case READ_CARD:/* 读取900M标签数据 */
    149          				debug_printf("UHF900M_CMD:READ CARD!!!\r\n");
   \                     ??DoDevCtl_6: (+1)
   \   000000D2   0x.... 0x....      ADR.W    R0,?_5
   \   000000D6   0x.... 0x....      BL       debug_printf
    150          				_cmd_900m_read_card(packet, &st_UHF_device, &en_device);
   \   000000DA   0x4622             MOV      R2,R4
   \   000000DC   0xF104 0x010C      ADD      R1,R4,#+12
   \   000000E0   0x4628             MOV      R0,R5
   \   000000E2   0x.... 0x....      BL       _cmd_900m_read_card
    151          				en_device.DeviceAct = READ_CARD;
   \   000000E6   0x2032             MOVS     R0,#+50
   \   000000E8   0x7060             STRB     R0,[R4, #+1]
    152          				break;
   \   000000EA   0xE035             B.N      ??DoDevCtl_1
    153          			case WRITE_CARD:/* 写数据到900M标签 */
    154          				debug_printf("UHF900M_CMD:WRITE CARD!!!\r\n");
   \                     ??DoDevCtl_5: (+1)
   \   000000EC   0x.... 0x....      ADR.W    R0,?_6
   \   000000F0   0x.... 0x....      BL       debug_printf
    155          				_cmd_900m_write_card(packet, &st_UHF_device, &en_device);
   \   000000F4   0x4622             MOV      R2,R4
   \   000000F6   0xF104 0x010C      ADD      R1,R4,#+12
   \   000000FA   0x4628             MOV      R0,R5
   \   000000FC   0x.... 0x....      BL       _cmd_900m_write_card
    156          				en_device.DeviceAct = WRITE_CARD;
   \   00000100   0x2033             MOVS     R0,#+51
   \   00000102   0x7060             STRB     R0,[R4, #+1]
    157          				break;			   
   \   00000104   0xE028             B.N      ??DoDevCtl_1
    158          			default:
    159          				break;
    160          		}
    161          	}
    162          #if 0	
    163          	else if(DEVICE_RFID_13P56M == packet->Device_type)			/* 暂时不用 */
    164          	{
    165          		OPENRS_232; 											/* 打开RS232 */
    166          		OSTimeDlyHMSM(0, 0, 0, 10); 							/* 使能接收后需要延迟10ms */	
    167          		en_device.DeviceNum = DEVICE_RFID_13P56M;				/* 设置执行的设备为13.56M */
    168          		debug_printf("RFID 13.56M online!\r\n");
    169          
    170          		switch(packet->Command_code)							/* 判断13.56M命令 */
    171          		{		
    172          			case SEARCH_CARD:/* 寻13.56M标签 */
    173          				debug_printf("SEARCH CARD\r\n");
    174          				_cmd_13p56m_list_card(packet);
    175          				break;
    176          			case READ_CARD:/* 读取13.56M标签数据 */
    177          				debug_printf("READ CARD\r\n");
    178          				_cmd_13p56m_read_card(packet);
    179          				break;
    180          			case WRITE_CARD:/* 写数据到13.56M标签 */
    181          				debug_printf("WRITE CARD\r\n");
    182          				_cmd_13p56m_write_card(packet);
    183          				break;
    184          			default:
    185          				break;
    186          		}
    187          
    188          	}
    189          #endif	
    190          	else if(DEVICE_POWER_PUMP == packet->Device_type)		/* 继电器控制水泵 */
   \                     ??DoDevCtl_3: (+1)
   \   00000106   0x283A             CMP      R0,#+58
   \   00000108   0xD102             BNE.N    ??DoDevCtl_7
    191          	{
    192          		en_device.DeviceNum = DEVICE_POWER_PUMP;			
   \   0000010A   0x203A             MOVS     R0,#+58
   \   0000010C   0x7020             STRB     R0,[R4, #+0]
   \   0000010E   0xE023             B.N      ??DoDevCtl_1
    193          	}
    194          	
    195          	else if(DEVICE_POWER_WARMLG == packet->Device_type) 	/* 继电器控制加热灯 */
   \                     ??DoDevCtl_7: (+1)
   \   00000110   0x2837             CMP      R0,#+55
   \   00000112   0xD102             BNE.N    ??DoDevCtl_8
    196          	{
    197          		en_device.DeviceNum = DEVICE_POWER_WARMLG;			
   \   00000114   0x2037             MOVS     R0,#+55
   \   00000116   0x7020             STRB     R0,[R4, #+0]
   \   00000118   0xE01E             B.N      ??DoDevCtl_1
    198          	}
    199          	
    200          	else if(DEVICE_SENSOR_CO2 == packet->Device_type) 		/* CO2传感器 */
   \                     ??DoDevCtl_8: (+1)
   \   0000011A   0x2817             CMP      R0,#+23
   \   0000011C   0xD106             BNE.N    ??DoDevCtl_9
    201          	{
    202          		InitCO2Sensor();
   \   0000011E   0x.... 0x....      BL       InitCO2Sensor
    203          		ReadCO2SensorValue();
   \   00000122   0x.... 0x....      BL       ReadCO2SensorValue
    204          		en_device.DeviceNum = DEVICE_SENSOR_CO2;			
   \   00000126   0x2017             MOVS     R0,#+23
   \   00000128   0x7020             STRB     R0,[R4, #+0]
   \   0000012A   0xE015             B.N      ??DoDevCtl_1
    205          	}	
    206          	
    207          	else if(DEVICE_SENSOR_TMPLG == packet->Device_type) 	/* 温湿度光照3合一 */
   \                     ??DoDevCtl_9: (+1)
   \   0000012C   0x2816             CMP      R0,#+22
   \   0000012E   0xD10A             BNE.N    ??DoDevCtl_10
    208          	{
    209          		InitTemplgSensor();
   \   00000130   0x.... 0x....      BL       InitTemplgSensor
    210          		ReadTemplgSensorValue(EN_TYPE_LIGHT);
   \   00000134   0x2000             MOVS     R0,#+0
   \   00000136   0x.... 0x....      BL       ReadTemplgSensorValue
    211          		ReadTemplgSensorValue(EN_TYPE_TEPHUM);
   \   0000013A   0x2001             MOVS     R0,#+1
   \   0000013C   0x.... 0x....      BL       ReadTemplgSensorValue
    212          		en_device.DeviceNum = DEVICE_SENSOR_TMPLG;		
   \   00000140   0x2016             MOVS     R0,#+22
   \   00000142   0x7020             STRB     R0,[R4, #+0]
   \   00000144   0xE008             B.N      ??DoDevCtl_1
    213          	}
    214          	
    215          	else if(DEVICE_DOOR == packet->Device_type) 			/* 继电器控制门闸 */
   \                     ??DoDevCtl_10: (+1)
   \   00000146   0x2831             CMP      R0,#+49
   \   00000148   0xD102             BNE.N    ??DoDevCtl_11
    216          	{
    217          		en_device.DeviceNum = DEVICE_DOOR;					
   \   0000014A   0x2031             MOVS     R0,#+49
   \   0000014C   0x7020             STRB     R0,[R4, #+0]
   \   0000014E   0xE003             B.N      ??DoDevCtl_1
    218          	}
    219          
    220          	else if(DEVICE_POWER_TRALG == packet->Device_type)		/* 红绿灯模块 */
   \                     ??DoDevCtl_11: (+1)
   \   00000150   0x283D             CMP      R0,#+61
   \   00000152   0xD101             BNE.N    ??DoDevCtl_1
    221          	{
    222          		en_device.DeviceNum = DEVICE_POWER_TRALG;	
   \   00000154   0x203D             MOVS     R0,#+61
   \   00000156   0x7020             STRB     R0,[R4, #+0]
    223          	}
    224          	
    225          	OSMemPut(Device_mem, packet); 							/* 释放Device使用的内存块 */
   \                     ??DoDevCtl_1: (+1)
   \   00000158   0x4629             MOV      R1,R5
   \   0000015A   0x68A0             LDR      R0,[R4, #+8]
   \   0000015C   0x.... 0x....      BL       OSMemPut
    226          }
   \   00000160   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    227          
    228          /**
    229            * @brief   信息数据接口
    230            * @details 接收一个数据包
    231            * @param  packet 接收到的数据包
    232           */

   \                                 In section .text, align 2, keep-with-next
    233          void DevActionProc(PST_DEVICE pst_device)
    234          {
   \                     DevActionProc: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0C0             SUB      SP,SP,#+256
   \   00000004   0x4604             MOV      R4,R0
    235          	u8 UsartSensorData[256] = {0};								/* 传感器接收串口数据数组 */
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0xF44F 0x7180      MOV      R1,#+256
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
    236          	u32 ulReceiveLen = 0;										/* 保存的接收数据长度 */
    237          	if(DEVICE_SENSOR_SCANGUN == pst_device->DeviceNum) 			/* 扫码枪 */
   \   00000010   0x7820             LDRB     R0,[R4, #+0]
   \   00000012   0x281E             CMP      R0,#+30
   \   00000014   0xD10B             BNE.N    ??DevActionProc_0
    238          	{
    239          		ulReceiveLen = Uart1RecvData((u8*)UsartSensorData); 	/* 接收串口1传过来的数据 */
   \   00000016   0xA800             ADD      R0,SP,#+0
   \   00000018   0x.... 0x....      BL       Uart1RecvData
    240          		if(ulReceiveLen >= SCANGUNDATASIZE) 					/* 判断接收的数据长度 */
   \   0000001C   0x2806             CMP      R0,#+6
   \   0000001E   0xD306             BCC.N    ??DevActionProc_0
    241          		{			
    242          			GropPackNBMsgSend(UsartSensorData, ulReceiveLen, 0x00);
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x4601             MOV      R1,R0
   \   00000024   0xA800             ADD      R0,SP,#+0
   \   00000026   0x.... 0x....      BL       GropPackNBMsgSend
    243          			pst_device->DeviceNum = DEVICE_NULL;
   \   0000002A   0x20FF             MOVS     R0,#+255
   \   0000002C   0x7020             STRB     R0,[R4, #+0]
    244          		}
    245          	}
    246          #if 0	
    247          	else if(DEVICE_RFID_13P56M == pst_device->DeviceNum) 		/* 扫码枪 */
    248          	{
    249          		ulReceiveLen = Uart1RecvData((u8*)UsartSensorData); 	/* 接收串口1传过来的数据 */
    250          		if(ulReceiveLen >= 0) 						/* 判断接收的数据长度 */
    251          		{
    252          			GropPackNBMsgSend(UsartSensorData, ulReceiveLen, 0x00);
    253          			pst_device->DeviceNum = DEVICE_NULL;
    254          		}
    255          	}
    256          
    257          	else if(DEVICE_RFID_900M == pst_device->DeviceNum) 			/* UHF900M */
    258          	{
    259          
    260          		ulReceiveLen = Uart1RecvData((u8*)UsartSensorData); 	/* 接收串口1传过来的数据 */
    261          		if(ulReceiveLen > 0) 									/* 判断接收的数据长度 */
    262          		{
    263          			debug_printf("Recv UHF Data!!!\r\n");
    264          			/* 打印测试 */
    265          			for(int i = 0; i < ulReceiveLen; i ++)
    266          			{
    267          				debug_printf("UHF Recv Data[%d] = %02X\n", i, UsartSensorData[i]);
    268          			}
    269          			//GropPackNBMsgSend(UsartSensorData, ulReceiveLen);
    270          			pst_device->DeviceNum = DEVICE_NULL;
    271          		}
    272          	
    273          		
    274          		if(WaitUHFDataReceive(&st_UHF_device) == UHF_STATUS_SUCCESS)
    275          		{	
    276          			/* EPC数据赋值 */
    277          			st_UHF_device.st_UHF_epc.epc_length = (st_UHF_device.st_UHF_pack.data[1] >> 3) * 2;
    278          			memcpy(st_UHF_device.st_UHF_epc.epc, &st_UHF_device.st_UHF_pack.data[3], st_UHF_device.st_UHF_epc.epc_length);
    279          			//return (&st_UHF_device->st_UHF_pack.data_size - 4);		/* 返回EPC数据长度 */
    280          			debug_printf("EPC = %d, ", st_UHF_device.st_UHF_epc.epc_length);
    281          			for(int i = 0; i < st_UHF_device.st_UHF_epc.epc_length; i ++)
    282          			{
    283          				debug_printf("%02X ", st_UHF_device.st_UHF_epc.epc[i]);
    284          			}
    285          			debug_printf("\r\n");
    286          			pst_device->DeviceNum = DEVICE_NULL;
    287          		}		
    288          	}
    289          #endif
    290          }
   \                     ??DevActionProc_0: (+1)
   \   0000002E   0xB040             ADD      SP,SP,#+256
   \   00000030   0xBD10             POP      {R4,PC}          ;; return
    291          
    292          /**
    293            * @brief   信息数据接口
    294            * @details 接收一个数据包
    295            * @param  packet 接收到的数据包
    296            * @retval 
    297           */

   \                                 In section .text, align 2, keep-with-next
    298          void DevicePacket_post(Device_packet_t *packet)
    299          {
   \                     DevicePacket_post: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x4604             MOV      R4,R0
    300              u8 err;    
    301              Device_packet_t *new = OSMemGet(Device_mem, &err);
   \   00000006   0x....             LDR.N    R5,??DataTable11
   \   00000008   0xA900             ADD      R1,SP,#+0
   \   0000000A   0x68A8             LDR      R0,[R5, #+8]
   \   0000000C   0x.... 0x....      BL       OSMemGet
   \   00000010   0x0006             MOVS     R6,R0
    302              if(!new)
   \   00000012   0xD007             BEQ.N    ??DevicePacket_post_0
    303                  return;
    304              memcpy(new, packet, sizeof(Device_packet_t));
   \   00000014   0x224C             MOVS     R2,#+76
   \   00000016   0x4621             MOV      R1,R4
   \   00000018   0x.... 0x....      BL       __aeabi_memcpy
    305              OSQPost(Device_queue, (void *)new);
   \   0000001C   0x4631             MOV      R1,R6
   \   0000001E   0x6868             LDR      R0,[R5, #+4]
   \   00000020   0x.... 0x....      BL       OSQPost
    306          }
   \                     ??DevicePacket_post_0: (+1)
   \   00000024   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     en_device

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x40010C00         DC32     0x40010c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x40010800         DC32     0x40010800

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000073   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000008A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000A1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000CF   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000FD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x5B 0x25          DC8 "[%s] enter.\015\012"
   \              0x73 0x5D    
   \              0x20 0x65    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x2E 0x0D    
   \              0x0A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x53 0x63          DC8 "Scan Gun online!\015\012"
   \              0x61 0x6E    
   \              0x20 0x47    
   \              0x75 0x6E    
   \              0x20 0x6F    
   \              0x6E 0x6C    
   \              0x69 0x6E    
   \              0x65 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x57 0x61          DC8 "Water meter online!\015\012"
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x6D 0x65    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x6F 0x6E    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x21 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x52 0x46          DC8 "RFID 900M online!\015\012"
   \              0x49 0x44    
   \              0x20 0x39    
   \              0x30 0x30    
   \              0x4D 0x20    
   \              0x6F 0x6E    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x55 0x48          DC8 "UHF900M_CMD:SEARCH CARD!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x5F    
   \              0x43 0x4D    
   \              0x44 0x3A    
   \              0x53 0x45    
   \              0x41 0x52    
   \              0x43 0x48    
   \              0x20 0x43    
   \              0x41 0x52    
   \              0x44 0x21    
   \              0x21 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x55 0x48          DC8 "UHF900M_CMD:READ CARD!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x5F    
   \              0x43 0x4D    
   \              0x44 0x3A    
   \              0x52 0x45    
   \              0x41 0x44    
   \              0x20 0x43    
   \              0x41 0x52    
   \              0x44 0x21    
   \              0x21 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x55 0x48          DC8 "UHF900M_CMD:WRITE CARD!!!\015\012"
   \              0x46 0x39    
   \              0x30 0x30    
   \              0x4D 0x5F    
   \              0x43 0x4D    
   \              0x44 0x3A    
   \              0x57 0x52    
   \              0x49 0x54    
   \              0x45 0x20    
   \              0x43 0x41    
   \              0x52 0x44    
   \              0x21 0x21    
   \              0x21 0x0D    
   \              0x0A 0x00    
    307          
    308          
    309          
    310          
    311          
    312          
    313          
    314          
    315          
    316          
    317          
    318          
    319          
    320          
    321          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   App_DEVICE_TASK
        16   -> DevActionProc
        16   -> DoDevCtl
        16   -> OSMemCreate
        16   -> OSQCreate
        16   -> OSTimeDlyHMSM
        16   -> debug_printf
     264   DevActionProc
       264   -> GropPackNBMsgSend
       264   -> Uart1RecvData
       264   -> __aeabi_memclr4
      24   DevicePacket_post
        24   -> OSMemGet
        24   -> OSQPost
        24   -> __aeabi_memcpy
      24   DoDevCtl
        24   -> GPIO_ResetBits
        24   -> GPIO_SetBits
        24   -> InitCO2Sensor
        24   -> InitTemplgSensor
        24   -> OSMemPut
        24   -> OSQPend
        24   -> OSTimeDlyHMSM
        24   -> ReadCO2SensorValue
        24   -> ReadTemplgSensorValue
        24   -> SetUSART_MODE
        24   -> UHF_900M_Init
        24   -> Watmet_Init
        24   -> Watmet_Read
        24   -> _cmd_900m_list_card
        24   -> _cmd_900m_read_card
        24   -> _cmd_900m_write_card
        24   -> debug_printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
      16  ?_0
      20  ?_1
      24  ?_2
      20  ?_3
      32  ?_4
      28  ?_5
      28  ?_6
     256  ?_7
      72  App_DEVICE_TASK
      50  DevActionProc
      38  DevicePacket_post
     354  DoDevCtl
     476  en_device
          Device_queue
          Device_mem
          st_UHF_device
          DEVICE_MEMORY
          pqueue_storge
      16  -- Other

 
 476 bytes in section .bss
 256 bytes in section .rodata
 710 bytes in section .text
 
 710 bytes of CODE  memory
 256 bytes of CONST memory
 476 bytes of DATA  memory

Errors: none
Warnings: 1
